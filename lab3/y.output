State 1 conflicts: 2 shift/reduce
State 35 conflicts: 1 shift/reduce
State 37 conflicts: 1 shift/reduce
State 99 conflicts: 13 shift/reduce
State 100 conflicts: 12 shift/reduce
State 126 conflicts: 12 shift/reduce
State 128 conflicts: 12 shift/reduce
State 142 conflicts: 12 shift/reduce


Grammar

    0 $accept: program $end

    1 program: exp

    2 exp: lvalue
    3    | NIL
    4    | INT
    5    | STRING
    6    | LPAREN RPAREN
    7    | LPAREN exp RPAREN
    8    | LPAREN sequencing RPAREN
    9    | ID LPAREN actuals RPAREN
   10    | ID LBRACE rec RBRACE
   11    | ID LBRACK exp RBRACK OF exp
   12    | lvalue ASSIGN exp
   13    | MINUS exp
   14    | exp PLUS exp
   15    | exp MINUS exp
   16    | exp TIMES exp
   17    | exp DIVIDE exp
   18    | exp EQ exp
   19    | exp NEQ exp
   20    | exp LT exp
   21    | exp LE exp
   22    | exp GT exp
   23    | exp GE exp
   24    | exp AND exp
   25    | exp OR exp
   26    | IF exp THEN exp ELSE exp
   27    | IF exp THEN exp
   28    | WHILE exp DO exp
   29    | FOR ID ASSIGN exp TO exp DO exp
   30    | BREAK
   31    | LET decs IN expseq END

   32 lvalue: oneormore

   33 oneormore: one
   34          | oneormore DOT ID
   35          | oneormore LBRACK exp RBRACK

   36 one: ID
   37    | ID DOT ID
   38    | ID LBRACK exp RBRACK

   39 expseq: %empty
   40       | sequencing_exps

   41 sequencing: exp SEMICOLON sequencing_exps

   42 sequencing_exps: exp
   43                | exp SEMICOLON sequencing_exps

   44 actuals: %empty
   45        | nonemptyactuals

   46 nonemptyactuals: exp
   47                | exp COMMA nonemptyactuals

   48 decs: %empty
   49     | dec decs

   50 dec: vardec
   51    | tydec
   52    | fundec

   53 vardec: VAR ID ASSIGN exp
   54       | VAR ID COLON ID ASSIGN exp

   55 tydec: tydec_one
   56      | tydec_one tydec

   57 tydec_one: TYPE ID EQ ty

   58 ty: ID
   59   | LBRACE tyfields RBRACE
   60   | ARRAY OF ID

   61 tyfields: %empty
   62         | tyfields_nonempty

   63 tyfields_nonempty: ID COLON ID
   64                  | ID COLON ID COMMA tyfields_nonempty

   65 fundec: fundec_one
   66       | fundec_one fundec

   67 fundec_one: FUNCTION ID LPAREN tyfields RPAREN EQ exp
   68           | FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp

   69 rec: %empty
   70    | rec_nonempty

   71 rec_nonempty: rec_one
   72             | rec_one COMMA rec_nonempty

   73 rec_one: ID EQ exp


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 9 10 11 29 34 36 37 38 53 54 57 58 60 63 64 67 68 73
STRING (259) 5
INT (260) 4
COMMA (261) 47 64 72
COLON (262) 54 63 64 68
SEMICOLON (263) 41 43
LPAREN (264) 6 7 8 9 67 68
RPAREN (265) 6 7 8 9 67 68
LBRACK (266) 11 35 38
RBRACK (267) 11 35 38
LBRACE (268) 10 59
RBRACE (269) 10 59
DOT (270) 34 37
PLUS (271) 14
MINUS (272) 13 15
TIMES (273) 16
DIVIDE (274) 17
EQ (275) 18 57 67 68 73
NEQ (276) 19
LT (277) 20
LE (278) 21
GT (279) 22
GE (280) 23
AND (281) 24
OR (282) 25
ASSIGN (283) 12 29 53 54
ARRAY (284) 60
IF (285) 26 27
THEN (286) 26 27
ELSE (287) 26
WHILE (288) 28
FOR (289) 29
TO (290) 29
DO (291) 28 29
LET (292) 31
IN (293) 31
END (294) 31
OF (295) 11 60
BREAK (296) 30
NIL (297) 3
FUNCTION (298) 67 68
VAR (299) 53 54
TYPE (300) 57
UMINUS (301)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1, on right: 0
exp (49)
    on left: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
    23 24 25 26 27 28 29 30 31, on right: 1 7 11 12 13 14 15 16 17
    18 19 20 21 22 23 24 25 26 27 28 29 35 38 41 42 43 46 47 53 54
    67 68 73
lvalue (50)
    on left: 32, on right: 2 12
oneormore (51)
    on left: 33 34 35, on right: 32 34 35
one (52)
    on left: 36 37 38, on right: 33
expseq (53)
    on left: 39 40, on right: 31
sequencing (54)
    on left: 41, on right: 8
sequencing_exps (55)
    on left: 42 43, on right: 40 41 43
actuals (56)
    on left: 44 45, on right: 9
nonemptyactuals (57)
    on left: 46 47, on right: 45 47
decs (58)
    on left: 48 49, on right: 31 49
dec (59)
    on left: 50 51 52, on right: 49
vardec (60)
    on left: 53 54, on right: 50
tydec (61)
    on left: 55 56, on right: 51 56
tydec_one (62)
    on left: 57, on right: 55 56
ty (63)
    on left: 58 59 60, on right: 57
tyfields (64)
    on left: 61 62, on right: 59 67 68
tyfields_nonempty (65)
    on left: 63 64, on right: 62 64
fundec (66)
    on left: 65 66, on right: 52 66
fundec_one (67)
    on left: 67 68, on right: 65 66
rec (68)
    on left: 69 70, on right: 10
rec_nonempty (69)
    on left: 71 72, on right: 70 72
rec_one (70)
    on left: 73, on right: 71 72


State 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    program    go to state 12
    exp        go to state 13
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 1

    9 exp: ID . LPAREN actuals RPAREN
   10    | ID . LBRACE rec RBRACE
   11    | ID . LBRACK exp RBRACK OF exp
   36 one: ID .
   37    | ID . DOT ID
   38    | ID . LBRACK exp RBRACK

    LPAREN  shift, and go to state 17
    LBRACK  shift, and go to state 18
    LBRACE  shift, and go to state 19
    DOT     shift, and go to state 20

    LBRACK    [reduce using rule 36 (one)]
    DOT       [reduce using rule 36 (one)]
    $default  reduce using rule 36 (one)


State 2

    5 exp: STRING .

    $default  reduce using rule 5 (exp)


State 3

    4 exp: INT .

    $default  reduce using rule 4 (exp)


State 4

    6 exp: LPAREN . RPAREN
    7    | LPAREN . exp RPAREN
    8    | LPAREN . sequencing RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    RPAREN  shift, and go to state 21
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp         go to state 22
    lvalue      go to state 14
    oneormore   go to state 15
    one         go to state 16
    sequencing  go to state 23


State 5

   13 exp: MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 24
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 6

   26 exp: IF . exp THEN exp ELSE exp
   27    | IF . exp THEN exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 25
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 7

   28 exp: WHILE . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 26
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 8

   29 exp: FOR . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 27


State 9

   31 exp: LET . decs IN expseq END

    FUNCTION  shift, and go to state 28
    VAR       shift, and go to state 29
    TYPE      shift, and go to state 30

    $default  reduce using rule 48 (decs)

    decs        go to state 31
    dec         go to state 32
    vardec      go to state 33
    tydec       go to state 34
    tydec_one   go to state 35
    fundec      go to state 36
    fundec_one  go to state 37


State 10

   30 exp: BREAK .

    $default  reduce using rule 30 (exp)


State 11

    3 exp: NIL .

    $default  reduce using rule 3 (exp)


State 12

    0 $accept: program . $end

    $end  shift, and go to state 38


State 13

    1 program: exp .
   14 exp: exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp
   24    | exp . AND exp
   25    | exp . OR exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 1 (program)


State 14

    2 exp: lvalue .
   12    | lvalue . ASSIGN exp

    ASSIGN  shift, and go to state 51

    $default  reduce using rule 2 (exp)


State 15

   32 lvalue: oneormore .
   34 oneormore: oneormore . DOT ID
   35          | oneormore . LBRACK exp RBRACK

    LBRACK  shift, and go to state 52
    DOT     shift, and go to state 53

    $default  reduce using rule 32 (lvalue)


State 16

   33 oneormore: one .

    $default  reduce using rule 33 (oneormore)


State 17

    9 exp: ID LPAREN . actuals RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 44 (actuals)

    exp              go to state 54
    lvalue           go to state 14
    oneormore        go to state 15
    one              go to state 16
    actuals          go to state 55
    nonemptyactuals  go to state 56


State 18

   11 exp: ID LBRACK . exp RBRACK OF exp
   38 one: ID LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 57
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 19

   10 exp: ID LBRACE . rec RBRACE

    ID  shift, and go to state 58

    $default  reduce using rule 69 (rec)

    rec           go to state 59
    rec_nonempty  go to state 60
    rec_one       go to state 61


State 20

   37 one: ID DOT . ID

    ID  shift, and go to state 62


State 21

    6 exp: LPAREN RPAREN .

    $default  reduce using rule 6 (exp)


State 22

    7 exp: LPAREN exp . RPAREN
   14    | exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp
   24    | exp . AND exp
   25    | exp . OR exp
   41 sequencing: exp . SEMICOLON sequencing_exps

    SEMICOLON  shift, and go to state 63
    RPAREN     shift, and go to state 64
    PLUS       shift, and go to state 39
    MINUS      shift, and go to state 40
    TIMES      shift, and go to state 41
    DIVIDE     shift, and go to state 42
    EQ         shift, and go to state 43
    NEQ        shift, and go to state 44
    LT         shift, and go to state 45
    LE         shift, and go to state 46
    GT         shift, and go to state 47
    GE         shift, and go to state 48
    AND        shift, and go to state 49
    OR         shift, and go to state 50


State 23

    8 exp: LPAREN sequencing . RPAREN

    RPAREN  shift, and go to state 65


State 24

   13 exp: MINUS exp .
   14    | exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp
   24    | exp . AND exp
   25    | exp . OR exp

    $default  reduce using rule 13 (exp)


State 25

   14 exp: exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp
   24    | exp . AND exp
   25    | exp . OR exp
   26    | IF exp . THEN exp ELSE exp
   27    | IF exp . THEN exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50
    THEN    shift, and go to state 66


State 26

   14 exp: exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp
   24    | exp . AND exp
   25    | exp . OR exp
   28    | WHILE exp . DO exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50
    DO      shift, and go to state 67


State 27

   29 exp: FOR ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 68


State 28

   67 fundec_one: FUNCTION . ID LPAREN tyfields RPAREN EQ exp
   68           | FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 69


State 29

   53 vardec: VAR . ID ASSIGN exp
   54       | VAR . ID COLON ID ASSIGN exp

    ID  shift, and go to state 70


State 30

   57 tydec_one: TYPE . ID EQ ty

    ID  shift, and go to state 71


State 31

   31 exp: LET decs . IN expseq END

    IN  shift, and go to state 72


State 32

   49 decs: dec . decs

    FUNCTION  shift, and go to state 28
    VAR       shift, and go to state 29
    TYPE      shift, and go to state 30

    $default  reduce using rule 48 (decs)

    decs        go to state 73
    dec         go to state 32
    vardec      go to state 33
    tydec       go to state 34
    tydec_one   go to state 35
    fundec      go to state 36
    fundec_one  go to state 37


State 33

   50 dec: vardec .

    $default  reduce using rule 50 (dec)


State 34

   51 dec: tydec .

    $default  reduce using rule 51 (dec)


State 35

   55 tydec: tydec_one .
   56      | tydec_one . tydec

    TYPE  shift, and go to state 30

    TYPE      [reduce using rule 55 (tydec)]
    $default  reduce using rule 55 (tydec)

    tydec      go to state 74
    tydec_one  go to state 35


State 36

   52 dec: fundec .

    $default  reduce using rule 52 (dec)


State 37

   65 fundec: fundec_one .
   66       | fundec_one . fundec

    FUNCTION  shift, and go to state 28

    FUNCTION  [reduce using rule 65 (fundec)]
    $default  reduce using rule 65 (fundec)

    fundec      go to state 75
    fundec_one  go to state 37


State 38

    0 $accept: program $end .

    $default  accept


State 39

   14 exp: exp PLUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 76
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 40

   15 exp: exp MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 77
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 41

   16 exp: exp TIMES . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 78
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 42

   17 exp: exp DIVIDE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 79
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 43

   18 exp: exp EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 80
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 44

   19 exp: exp NEQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 81
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 45

   20 exp: exp LT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 82
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 46

   21 exp: exp LE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 83
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 47

   22 exp: exp GT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 84
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 48

   23 exp: exp GE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 85
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 49

   24 exp: exp AND . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 86
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 50

   25 exp: exp OR . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 87
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 51

   12 exp: lvalue ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 88
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 52

   35 oneormore: oneormore LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 89
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 53

   34 oneormore: oneormore DOT . ID

    ID  shift, and go to state 90


State 54

   14 exp: exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp
   24    | exp . AND exp
   25    | exp . OR exp
   46 nonemptyactuals: exp .
   47                | exp . COMMA nonemptyactuals

    COMMA   shift, and go to state 91
    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 46 (nonemptyactuals)


State 55

    9 exp: ID LPAREN actuals . RPAREN

    RPAREN  shift, and go to state 92


State 56

   45 actuals: nonemptyactuals .

    $default  reduce using rule 45 (actuals)


State 57

   11 exp: ID LBRACK exp . RBRACK OF exp
   14    | exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp
   24    | exp . AND exp
   25    | exp . OR exp
   38 one: ID LBRACK exp . RBRACK

    RBRACK  shift, and go to state 93
    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50


State 58

   73 rec_one: ID . EQ exp

    EQ  shift, and go to state 94


State 59

   10 exp: ID LBRACE rec . RBRACE

    RBRACE  shift, and go to state 95


State 60

   70 rec: rec_nonempty .

    $default  reduce using rule 70 (rec)


State 61

   71 rec_nonempty: rec_one .
   72             | rec_one . COMMA rec_nonempty

    COMMA  shift, and go to state 96

    $default  reduce using rule 71 (rec_nonempty)


State 62

   37 one: ID DOT ID .

    $default  reduce using rule 37 (one)


State 63

   41 sequencing: exp SEMICOLON . sequencing_exps

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp              go to state 97
    lvalue           go to state 14
    oneormore        go to state 15
    one              go to state 16
    sequencing_exps  go to state 98


State 64

    7 exp: LPAREN exp RPAREN .

    $default  reduce using rule 7 (exp)


State 65

    8 exp: LPAREN sequencing RPAREN .

    $default  reduce using rule 8 (exp)


State 66

   26 exp: IF exp THEN . exp ELSE exp
   27    | IF exp THEN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 99
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 67

   28 exp: WHILE exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 100
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 68

   29 exp: FOR ID ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 101
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 69

   67 fundec_one: FUNCTION ID . LPAREN tyfields RPAREN EQ exp
   68           | FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp

    LPAREN  shift, and go to state 102


State 70

   53 vardec: VAR ID . ASSIGN exp
   54       | VAR ID . COLON ID ASSIGN exp

    COLON   shift, and go to state 103
    ASSIGN  shift, and go to state 104


State 71

   57 tydec_one: TYPE ID . EQ ty

    EQ  shift, and go to state 105


State 72

   31 exp: LET decs IN . expseq END

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 39 (expseq)

    exp              go to state 97
    lvalue           go to state 14
    oneormore        go to state 15
    one              go to state 16
    expseq           go to state 106
    sequencing_exps  go to state 107


State 73

   49 decs: dec decs .

    $default  reduce using rule 49 (decs)


State 74

   56 tydec: tydec_one tydec .

    $default  reduce using rule 56 (tydec)


State 75

   66 fundec: fundec_one fundec .

    $default  reduce using rule 66 (fundec)


State 76

   14 exp: exp . PLUS exp
   14    | exp PLUS exp .
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp
   24    | exp . AND exp
   25    | exp . OR exp

    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42

    $default  reduce using rule 14 (exp)


State 77

   14 exp: exp . PLUS exp
   15    | exp . MINUS exp
   15    | exp MINUS exp .
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp
   24    | exp . AND exp
   25    | exp . OR exp

    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42

    $default  reduce using rule 15 (exp)


State 78

   14 exp: exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   16    | exp TIMES exp .
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp
   24    | exp . AND exp
   25    | exp . OR exp

    $default  reduce using rule 16 (exp)


State 79

   14 exp: exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   17    | exp DIVIDE exp .
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp
   24    | exp . AND exp
   25    | exp . OR exp

    $default  reduce using rule 17 (exp)


State 80

   14 exp: exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   18    | exp EQ exp .
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp
   24    | exp . AND exp
   25    | exp . OR exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 18 (exp)


State 81

   14 exp: exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   19    | exp NEQ exp .
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp
   24    | exp . AND exp
   25    | exp . OR exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 19 (exp)


State 82

   14 exp: exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   20    | exp LT exp .
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp
   24    | exp . AND exp
   25    | exp . OR exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 20 (exp)


State 83

   14 exp: exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   21    | exp LE exp .
   22    | exp . GT exp
   23    | exp . GE exp
   24    | exp . AND exp
   25    | exp . OR exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 21 (exp)


State 84

   14 exp: exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   22    | exp GT exp .
   23    | exp . GE exp
   24    | exp . AND exp
   25    | exp . OR exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 22 (exp)


State 85

   14 exp: exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp
   23    | exp GE exp .
   24    | exp . AND exp
   25    | exp . OR exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 23 (exp)


State 86

   14 exp: exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp
   24    | exp . AND exp
   24    | exp AND exp .
   25    | exp . OR exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48

    $default  reduce using rule 24 (exp)


State 87

   14 exp: exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp
   24    | exp . AND exp
   25    | exp . OR exp
   25    | exp OR exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49

    $default  reduce using rule 25 (exp)


State 88

   12 exp: lvalue ASSIGN exp .
   14    | exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp
   24    | exp . AND exp
   25    | exp . OR exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 12 (exp)


State 89

   14 exp: exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp
   24    | exp . AND exp
   25    | exp . OR exp
   35 oneormore: oneormore LBRACK exp . RBRACK

    RBRACK  shift, and go to state 108
    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50


State 90

   34 oneormore: oneormore DOT ID .

    $default  reduce using rule 34 (oneormore)


State 91

   47 nonemptyactuals: exp COMMA . nonemptyactuals

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp              go to state 54
    lvalue           go to state 14
    oneormore        go to state 15
    one              go to state 16
    nonemptyactuals  go to state 109


State 92

    9 exp: ID LPAREN actuals RPAREN .

    $default  reduce using rule 9 (exp)


State 93

   11 exp: ID LBRACK exp RBRACK . OF exp
   38 one: ID LBRACK exp RBRACK .

    OF  shift, and go to state 110

    $default  reduce using rule 38 (one)


State 94

   73 rec_one: ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 111
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 95

   10 exp: ID LBRACE rec RBRACE .

    $default  reduce using rule 10 (exp)


State 96

   72 rec_nonempty: rec_one COMMA . rec_nonempty

    ID  shift, and go to state 58

    rec_nonempty  go to state 112
    rec_one       go to state 61


State 97

   14 exp: exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp
   24    | exp . AND exp
   25    | exp . OR exp
   42 sequencing_exps: exp .
   43                | exp . SEMICOLON sequencing_exps

    SEMICOLON  shift, and go to state 113
    PLUS       shift, and go to state 39
    MINUS      shift, and go to state 40
    TIMES      shift, and go to state 41
    DIVIDE     shift, and go to state 42
    EQ         shift, and go to state 43
    NEQ        shift, and go to state 44
    LT         shift, and go to state 45
    LE         shift, and go to state 46
    GT         shift, and go to state 47
    GE         shift, and go to state 48
    AND        shift, and go to state 49
    OR         shift, and go to state 50

    $default  reduce using rule 42 (sequencing_exps)


State 98

   41 sequencing: exp SEMICOLON sequencing_exps .

    $default  reduce using rule 41 (sequencing)


State 99

   14 exp: exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp
   24    | exp . AND exp
   25    | exp . OR exp
   26    | IF exp THEN exp . ELSE exp
   27    | IF exp THEN exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50
    ELSE    shift, and go to state 114

    PLUS      [reduce using rule 27 (exp)]
    MINUS     [reduce using rule 27 (exp)]
    TIMES     [reduce using rule 27 (exp)]
    DIVIDE    [reduce using rule 27 (exp)]
    EQ        [reduce using rule 27 (exp)]
    NEQ       [reduce using rule 27 (exp)]
    LT        [reduce using rule 27 (exp)]
    LE        [reduce using rule 27 (exp)]
    GT        [reduce using rule 27 (exp)]
    GE        [reduce using rule 27 (exp)]
    AND       [reduce using rule 27 (exp)]
    OR        [reduce using rule 27 (exp)]
    ELSE      [reduce using rule 27 (exp)]
    $default  reduce using rule 27 (exp)


State 100

   14 exp: exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp
   24    | exp . AND exp
   25    | exp . OR exp
   28    | WHILE exp DO exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    PLUS      [reduce using rule 28 (exp)]
    MINUS     [reduce using rule 28 (exp)]
    TIMES     [reduce using rule 28 (exp)]
    DIVIDE    [reduce using rule 28 (exp)]
    EQ        [reduce using rule 28 (exp)]
    NEQ       [reduce using rule 28 (exp)]
    LT        [reduce using rule 28 (exp)]
    LE        [reduce using rule 28 (exp)]
    GT        [reduce using rule 28 (exp)]
    GE        [reduce using rule 28 (exp)]
    AND       [reduce using rule 28 (exp)]
    OR        [reduce using rule 28 (exp)]
    $default  reduce using rule 28 (exp)


State 101

   14 exp: exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp
   24    | exp . AND exp
   25    | exp . OR exp
   29    | FOR ID ASSIGN exp . TO exp DO exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50
    TO      shift, and go to state 115


State 102

   67 fundec_one: FUNCTION ID LPAREN . tyfields RPAREN EQ exp
   68           | FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 116

    $default  reduce using rule 61 (tyfields)

    tyfields           go to state 117
    tyfields_nonempty  go to state 118


State 103

   54 vardec: VAR ID COLON . ID ASSIGN exp

    ID  shift, and go to state 119


State 104

   53 vardec: VAR ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 120
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 105

   57 tydec_one: TYPE ID EQ . ty

    ID      shift, and go to state 121
    LBRACE  shift, and go to state 122
    ARRAY   shift, and go to state 123

    ty  go to state 124


State 106

   31 exp: LET decs IN expseq . END

    END  shift, and go to state 125


State 107

   40 expseq: sequencing_exps .

    $default  reduce using rule 40 (expseq)


State 108

   35 oneormore: oneormore LBRACK exp RBRACK .

    $default  reduce using rule 35 (oneormore)


State 109

   47 nonemptyactuals: exp COMMA nonemptyactuals .

    $default  reduce using rule 47 (nonemptyactuals)


State 110

   11 exp: ID LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 126
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 111

   14 exp: exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp
   24    | exp . AND exp
   25    | exp . OR exp
   73 rec_one: ID EQ exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 73 (rec_one)


State 112

   72 rec_nonempty: rec_one COMMA rec_nonempty .

    $default  reduce using rule 72 (rec_nonempty)


State 113

   43 sequencing_exps: exp SEMICOLON . sequencing_exps

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp              go to state 97
    lvalue           go to state 14
    oneormore        go to state 15
    one              go to state 16
    sequencing_exps  go to state 127


State 114

   26 exp: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 128
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 115

   29 exp: FOR ID ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 129
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 116

   63 tyfields_nonempty: ID . COLON ID
   64                  | ID . COLON ID COMMA tyfields_nonempty

    COLON  shift, and go to state 130


State 117

   67 fundec_one: FUNCTION ID LPAREN tyfields . RPAREN EQ exp
   68           | FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp

    RPAREN  shift, and go to state 131


State 118

   62 tyfields: tyfields_nonempty .

    $default  reduce using rule 62 (tyfields)


State 119

   54 vardec: VAR ID COLON ID . ASSIGN exp

    ASSIGN  shift, and go to state 132


State 120

   14 exp: exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp
   24    | exp . AND exp
   25    | exp . OR exp
   53 vardec: VAR ID ASSIGN exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 53 (vardec)


State 121

   58 ty: ID .

    $default  reduce using rule 58 (ty)


State 122

   59 ty: LBRACE . tyfields RBRACE

    ID  shift, and go to state 116

    $default  reduce using rule 61 (tyfields)

    tyfields           go to state 133
    tyfields_nonempty  go to state 118


State 123

   60 ty: ARRAY . OF ID

    OF  shift, and go to state 134


State 124

   57 tydec_one: TYPE ID EQ ty .

    $default  reduce using rule 57 (tydec_one)


State 125

   31 exp: LET decs IN expseq END .

    $default  reduce using rule 31 (exp)


State 126

   11 exp: ID LBRACK exp RBRACK OF exp .
   14    | exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp
   24    | exp . AND exp
   25    | exp . OR exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    PLUS      [reduce using rule 11 (exp)]
    MINUS     [reduce using rule 11 (exp)]
    TIMES     [reduce using rule 11 (exp)]
    DIVIDE    [reduce using rule 11 (exp)]
    EQ        [reduce using rule 11 (exp)]
    NEQ       [reduce using rule 11 (exp)]
    LT        [reduce using rule 11 (exp)]
    LE        [reduce using rule 11 (exp)]
    GT        [reduce using rule 11 (exp)]
    GE        [reduce using rule 11 (exp)]
    AND       [reduce using rule 11 (exp)]
    OR        [reduce using rule 11 (exp)]
    $default  reduce using rule 11 (exp)


State 127

   43 sequencing_exps: exp SEMICOLON sequencing_exps .

    $default  reduce using rule 43 (sequencing_exps)


State 128

   14 exp: exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp
   24    | exp . AND exp
   25    | exp . OR exp
   26    | IF exp THEN exp ELSE exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    PLUS      [reduce using rule 26 (exp)]
    MINUS     [reduce using rule 26 (exp)]
    TIMES     [reduce using rule 26 (exp)]
    DIVIDE    [reduce using rule 26 (exp)]
    EQ        [reduce using rule 26 (exp)]
    NEQ       [reduce using rule 26 (exp)]
    LT        [reduce using rule 26 (exp)]
    LE        [reduce using rule 26 (exp)]
    GT        [reduce using rule 26 (exp)]
    GE        [reduce using rule 26 (exp)]
    AND       [reduce using rule 26 (exp)]
    OR        [reduce using rule 26 (exp)]
    $default  reduce using rule 26 (exp)


State 129

   14 exp: exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp
   24    | exp . AND exp
   25    | exp . OR exp
   29    | FOR ID ASSIGN exp TO exp . DO exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50
    DO      shift, and go to state 135


State 130

   63 tyfields_nonempty: ID COLON . ID
   64                  | ID COLON . ID COMMA tyfields_nonempty

    ID  shift, and go to state 136


State 131

   67 fundec_one: FUNCTION ID LPAREN tyfields RPAREN . EQ exp
   68           | FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp

    COLON  shift, and go to state 137
    EQ     shift, and go to state 138


State 132

   54 vardec: VAR ID COLON ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 139
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 133

   59 ty: LBRACE tyfields . RBRACE

    RBRACE  shift, and go to state 140


State 134

   60 ty: ARRAY OF . ID

    ID  shift, and go to state 141


State 135

   29 exp: FOR ID ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 142
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 136

   63 tyfields_nonempty: ID COLON ID .
   64                  | ID COLON ID . COMMA tyfields_nonempty

    COMMA  shift, and go to state 143

    $default  reduce using rule 63 (tyfields_nonempty)


State 137

   68 fundec_one: FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp

    ID  shift, and go to state 144


State 138

   67 fundec_one: FUNCTION ID LPAREN tyfields RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 145
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 139

   14 exp: exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp
   24    | exp . AND exp
   25    | exp . OR exp
   54 vardec: VAR ID COLON ID ASSIGN exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 54 (vardec)


State 140

   59 ty: LBRACE tyfields RBRACE .

    $default  reduce using rule 59 (ty)


State 141

   60 ty: ARRAY OF ID .

    $default  reduce using rule 60 (ty)


State 142

   14 exp: exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp
   24    | exp . AND exp
   25    | exp . OR exp
   29    | FOR ID ASSIGN exp TO exp DO exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    PLUS      [reduce using rule 29 (exp)]
    MINUS     [reduce using rule 29 (exp)]
    TIMES     [reduce using rule 29 (exp)]
    DIVIDE    [reduce using rule 29 (exp)]
    EQ        [reduce using rule 29 (exp)]
    NEQ       [reduce using rule 29 (exp)]
    LT        [reduce using rule 29 (exp)]
    LE        [reduce using rule 29 (exp)]
    GT        [reduce using rule 29 (exp)]
    GE        [reduce using rule 29 (exp)]
    AND       [reduce using rule 29 (exp)]
    OR        [reduce using rule 29 (exp)]
    $default  reduce using rule 29 (exp)


State 143

   64 tyfields_nonempty: ID COLON ID COMMA . tyfields_nonempty

    ID  shift, and go to state 116

    tyfields_nonempty  go to state 146


State 144

   68 fundec_one: FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 147


State 145

   14 exp: exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp
   24    | exp . AND exp
   25    | exp . OR exp
   67 fundec_one: FUNCTION ID LPAREN tyfields RPAREN EQ exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 67 (fundec_one)


State 146

   64 tyfields_nonempty: ID COLON ID COMMA tyfields_nonempty .

    $default  reduce using rule 64 (tyfields_nonempty)


State 147

   68 fundec_one: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 148
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 148

   14 exp: exp . PLUS exp
   15    | exp . MINUS exp
   16    | exp . TIMES exp
   17    | exp . DIVIDE exp
   18    | exp . EQ exp
   19    | exp . NEQ exp
   20    | exp . LT exp
   21    | exp . LE exp
   22    | exp . GT exp
   23    | exp . GE exp
   24    | exp . AND exp
   25    | exp . OR exp
   68 fundec_one: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 68 (fundec_one)
