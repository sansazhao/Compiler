Rules useless in parser due to conflicts

   35 actuals: %empty

   57 rec: %empty


State 1 conflicts: 1 shift/reduce
State 15 conflicts: 2 shift/reduce
State 17 conflicts: 1 shift/reduce
State 19 conflicts: 1 shift/reduce
State 35 conflicts: 1 shift/reduce
State 37 conflicts: 1 shift/reduce
State 104 conflicts: 13 shift/reduce
State 105 conflicts: 12 shift/reduce
State 107 conflicts: 1 shift/reduce
State 134 conflicts: 12 shift/reduce
State 136 conflicts: 12 shift/reduce
State 154 conflicts: 12 shift/reduce


Grammar

    0 $accept: program $end

    1 program: exp

    2 exp: lvalue
    3    | NIL
    4    | INT
    5    | STRING
    6    | ID LPAREN actuals RPAREN
    7    | ID LPAREN RPAREN
    8    | MINUS exp
    9    | exp PLUS exp
   10    | exp MINUS exp
   11    | exp TIMES exp
   12    | exp DIVIDE exp
   13    | exp EQ exp
   14    | exp NEQ exp
   15    | exp LT exp
   16    | exp LE exp
   17    | exp GT exp
   18    | exp GE exp
   19    | ID LBRACE rec RBRACE
   20    | ID LBRACE RBRACE
   21    | LPAREN RPAREN
   22    | LPAREN sequencing RPAREN
   23    | lvalue ASSIGN exp
   24    | IF exp THEN exp
   25    | IF exp THEN exp ELSE exp
   26    | exp AND exp
   27    | exp OR exp
   28    | WHILE exp DO exp
   29    | FOR ID ASSIGN exp TO exp DO exp
   30    | BREAK
   31    | LET decs IN expseq END
   32    | ID LBRACK exp RBRACK OF exp
   33    | LPAREN exp RPAREN

   34 expseq: sequencing

   35 actuals: %empty
   36        | nonemptyactuals

   37 nonemptyactuals: exp
   38                | exp COMMA nonemptyactuals

   39 sequencing: exp SEMICOLON sequencing_exps

   40 sequencing_exps: exp
   41                | exp SEMICOLON sequencing_exps

   42 lvalue: oneormore

   43 oneormore: one
   44          | oneormore DOT ID
   45          | oneormore LBRACK exp RBRACK

   46 one: ID
   47    | lvalue DOT ID
   48    | lvalue LBRACK exp RBRACK

   49 decs: %empty
   50     | decs_nonempty

   51 decs_nonempty: decs_nonempty_s decs

   52 decs_nonempty_s: vardec
   53                | tydec
   54                | fundec

   55 vardec: VAR ID ASSIGN exp
   56       | VAR ID COLON ID ASSIGN exp

   57 rec: %empty
   58    | rec_nonempty

   59 rec_nonempty: rec_one
   60             | rec_one COMMA rec_nonempty

   61 rec_one: ID EQ exp

   62 tydec: tydec_one
   63      | tydec_one tydec

   64 tydec_one: TYPE ID EQ ty

   65 tyfields: %empty
   66         | tyfields_nonempty

   67 tyfields_nonempty: ID COLON ID
   68                  | ID COLON ID COMMA tyfields_nonempty

   69 ty: ID
   70   | LBRACE tyfields RBRACE
   71   | ARRAY OF ID

   72 fundec: fundec_one
   73       | fundec_one fundec

   74 fundec_one: FUNCTION ID LPAREN tyfields RPAREN EQ exp
   75           | FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp
   76           | FUNCTION ID LPAREN RPAREN EQ exp
   77           | FUNCTION ID LPAREN RPAREN COLON ID EQ exp


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 6 7 19 20 29 32 44 46 47 55 56 61 64 67 68 69 71 74 75 76
    77
STRING (259) 5
INT (260) 4
COMMA (261) 38 60 68
COLON (262) 56 67 68 75 77
SEMICOLON (263) 39 41
LPAREN (264) 6 7 21 22 33 74 75 76 77
RPAREN (265) 6 7 21 22 33 74 75 76 77
LBRACK (266) 32 45 48
RBRACK (267) 32 45 48
LBRACE (268) 19 20 70
RBRACE (269) 19 20 70
DOT (270) 44 47
PLUS (271) 9
MINUS (272) 8 10
TIMES (273) 11
DIVIDE (274) 12
EQ (275) 13 61 64 74 75 76 77
NEQ (276) 14
LT (277) 15
LE (278) 16
GT (279) 17
GE (280) 18
AND (281) 26
OR (282) 27
ASSIGN (283) 23 29 55 56
ARRAY (284) 71
IF (285) 24 25
THEN (286) 24 25
ELSE (287) 25
WHILE (288) 28
FOR (289) 29
TO (290) 29
DO (291) 28 29
LET (292) 31
IN (293) 31
END (294) 31
OF (295) 32 71
BREAK (296) 30
NIL (297) 3
FUNCTION (298) 74 75 76 77
VAR (299) 55 56
TYPE (300) 64
UMINUS (301)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1, on right: 0
exp (49)
    on left: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
    23 24 25 26 27 28 29 30 31 32 33, on right: 1 8 9 10 11 12 13 14
    15 16 17 18 23 24 25 26 27 28 29 32 33 37 38 39 40 41 45 48 55
    56 61 74 75 76 77
expseq (50)
    on left: 34, on right: 31
actuals (51)
    on left: 35 36, on right: 6
nonemptyactuals (52)
    on left: 37 38, on right: 36 38
sequencing (53)
    on left: 39, on right: 22 34
sequencing_exps (54)
    on left: 40 41, on right: 39 41
lvalue (55)
    on left: 42, on right: 2 23 47 48
oneormore (56)
    on left: 43 44 45, on right: 42 44 45
one (57)
    on left: 46 47 48, on right: 43
decs (58)
    on left: 49 50, on right: 31 51
decs_nonempty (59)
    on left: 51, on right: 50
decs_nonempty_s (60)
    on left: 52 53 54, on right: 51
vardec (61)
    on left: 55 56, on right: 52
rec (62)
    on left: 57 58, on right: 19
rec_nonempty (63)
    on left: 59 60, on right: 58 60
rec_one (64)
    on left: 61, on right: 59 60
tydec (65)
    on left: 62 63, on right: 53 63
tydec_one (66)
    on left: 64, on right: 62 63
tyfields (67)
    on left: 65 66, on right: 70 74 75
tyfields_nonempty (68)
    on left: 67 68, on right: 66 68
ty (69)
    on left: 69 70 71, on right: 64
fundec (70)
    on left: 72 73, on right: 54 73
fundec_one (71)
    on left: 74 75 76 77, on right: 72 73


State 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    program    go to state 12
    exp        go to state 13
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 1

    6 exp: ID . LPAREN actuals RPAREN
    7    | ID . LPAREN RPAREN
   19    | ID . LBRACE rec RBRACE
   20    | ID . LBRACE RBRACE
   32    | ID . LBRACK exp RBRACK OF exp
   46 one: ID .

    LPAREN  shift, and go to state 17
    LBRACK  shift, and go to state 18
    LBRACE  shift, and go to state 19

    LBRACK    [reduce using rule 46 (one)]
    $default  reduce using rule 46 (one)


State 2

    5 exp: STRING .

    $default  reduce using rule 5 (exp)


State 3

    4 exp: INT .

    $default  reduce using rule 4 (exp)


State 4

   21 exp: LPAREN . RPAREN
   22    | LPAREN . sequencing RPAREN
   33    | LPAREN . exp RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    RPAREN  shift, and go to state 20
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp         go to state 21
    sequencing  go to state 22
    lvalue      go to state 14
    oneormore   go to state 15
    one         go to state 16


State 5

    8 exp: MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 23
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 6

   24 exp: IF . exp THEN exp
   25    | IF . exp THEN exp ELSE exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 24
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 7

   28 exp: WHILE . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 25
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 8

   29 exp: FOR . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 26


State 9

   31 exp: LET . decs IN expseq END

    FUNCTION  shift, and go to state 27
    VAR       shift, and go to state 28
    TYPE      shift, and go to state 29

    $default  reduce using rule 49 (decs)

    decs             go to state 30
    decs_nonempty    go to state 31
    decs_nonempty_s  go to state 32
    vardec           go to state 33
    tydec            go to state 34
    tydec_one        go to state 35
    fundec           go to state 36
    fundec_one       go to state 37


State 10

   30 exp: BREAK .

    $default  reduce using rule 30 (exp)


State 11

    3 exp: NIL .

    $default  reduce using rule 3 (exp)


State 12

    0 $accept: program . $end

    $end  shift, and go to state 38


State 13

    1 program: exp .
    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 1 (program)


State 14

    2 exp: lvalue .
   23    | lvalue . ASSIGN exp
   47 one: lvalue . DOT ID
   48    | lvalue . LBRACK exp RBRACK

    LBRACK  shift, and go to state 51
    DOT     shift, and go to state 52
    ASSIGN  shift, and go to state 53

    $default  reduce using rule 2 (exp)


State 15

   42 lvalue: oneormore .
   44 oneormore: oneormore . DOT ID
   45          | oneormore . LBRACK exp RBRACK

    LBRACK  shift, and go to state 54
    DOT     shift, and go to state 55

    LBRACK    [reduce using rule 42 (lvalue)]
    DOT       [reduce using rule 42 (lvalue)]
    $default  reduce using rule 42 (lvalue)


State 16

   43 oneormore: one .

    $default  reduce using rule 43 (oneormore)


State 17

    6 exp: ID LPAREN . actuals RPAREN
    7    | ID LPAREN . RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    RPAREN  shift, and go to state 56
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    RPAREN  [reduce using rule 35 (actuals)]

    exp              go to state 57
    actuals          go to state 58
    nonemptyactuals  go to state 59
    lvalue           go to state 14
    oneormore        go to state 15
    one              go to state 16


State 18

   32 exp: ID LBRACK . exp RBRACK OF exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 60
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 19

   19 exp: ID LBRACE . rec RBRACE
   20    | ID LBRACE . RBRACE

    ID      shift, and go to state 61
    RBRACE  shift, and go to state 62

    RBRACE  [reduce using rule 57 (rec)]

    rec           go to state 63
    rec_nonempty  go to state 64
    rec_one       go to state 65


State 20

   21 exp: LPAREN RPAREN .

    $default  reduce using rule 21 (exp)


State 21

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp
   33    | LPAREN exp . RPAREN
   39 sequencing: exp . SEMICOLON sequencing_exps

    SEMICOLON  shift, and go to state 66
    RPAREN     shift, and go to state 67
    PLUS       shift, and go to state 39
    MINUS      shift, and go to state 40
    TIMES      shift, and go to state 41
    DIVIDE     shift, and go to state 42
    EQ         shift, and go to state 43
    NEQ        shift, and go to state 44
    LT         shift, and go to state 45
    LE         shift, and go to state 46
    GT         shift, and go to state 47
    GE         shift, and go to state 48
    AND        shift, and go to state 49
    OR         shift, and go to state 50


State 22

   22 exp: LPAREN sequencing . RPAREN

    RPAREN  shift, and go to state 68


State 23

    8 exp: MINUS exp .
    9    | exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp

    $default  reduce using rule 8 (exp)


State 24

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   24    | IF exp . THEN exp
   25    | IF exp . THEN exp ELSE exp
   26    | exp . AND exp
   27    | exp . OR exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50
    THEN    shift, and go to state 69


State 25

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp
   28    | WHILE exp . DO exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50
    DO      shift, and go to state 70


State 26

   29 exp: FOR ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 71


State 27

   74 fundec_one: FUNCTION . ID LPAREN tyfields RPAREN EQ exp
   75           | FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp
   76           | FUNCTION . ID LPAREN RPAREN EQ exp
   77           | FUNCTION . ID LPAREN RPAREN COLON ID EQ exp

    ID  shift, and go to state 72


State 28

   55 vardec: VAR . ID ASSIGN exp
   56       | VAR . ID COLON ID ASSIGN exp

    ID  shift, and go to state 73


State 29

   64 tydec_one: TYPE . ID EQ ty

    ID  shift, and go to state 74


State 30

   31 exp: LET decs . IN expseq END

    IN  shift, and go to state 75


State 31

   50 decs: decs_nonempty .

    $default  reduce using rule 50 (decs)


State 32

   51 decs_nonempty: decs_nonempty_s . decs

    FUNCTION  shift, and go to state 27
    VAR       shift, and go to state 28
    TYPE      shift, and go to state 29

    $default  reduce using rule 49 (decs)

    decs             go to state 76
    decs_nonempty    go to state 31
    decs_nonempty_s  go to state 32
    vardec           go to state 33
    tydec            go to state 34
    tydec_one        go to state 35
    fundec           go to state 36
    fundec_one       go to state 37


State 33

   52 decs_nonempty_s: vardec .

    $default  reduce using rule 52 (decs_nonempty_s)


State 34

   53 decs_nonempty_s: tydec .

    $default  reduce using rule 53 (decs_nonempty_s)


State 35

   62 tydec: tydec_one .
   63      | tydec_one . tydec

    TYPE  shift, and go to state 29

    TYPE      [reduce using rule 62 (tydec)]
    $default  reduce using rule 62 (tydec)

    tydec      go to state 77
    tydec_one  go to state 35


State 36

   54 decs_nonempty_s: fundec .

    $default  reduce using rule 54 (decs_nonempty_s)


State 37

   72 fundec: fundec_one .
   73       | fundec_one . fundec

    FUNCTION  shift, and go to state 27

    FUNCTION  [reduce using rule 72 (fundec)]
    $default  reduce using rule 72 (fundec)

    fundec      go to state 78
    fundec_one  go to state 37


State 38

    0 $accept: program $end .

    $default  accept


State 39

    9 exp: exp PLUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 79
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 40

   10 exp: exp MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 80
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 41

   11 exp: exp TIMES . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 81
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 42

   12 exp: exp DIVIDE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 82
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 43

   13 exp: exp EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 83
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 44

   14 exp: exp NEQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 84
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 45

   15 exp: exp LT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 85
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 46

   16 exp: exp LE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 86
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 47

   17 exp: exp GT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 87
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 48

   18 exp: exp GE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 88
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 49

   26 exp: exp AND . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 89
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 50

   27 exp: exp OR . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 90
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 51

   48 one: lvalue LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 91
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 52

   47 one: lvalue DOT . ID

    ID  shift, and go to state 92


State 53

   23 exp: lvalue ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 93
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 54

   45 oneormore: oneormore LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 94
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 55

   44 oneormore: oneormore DOT . ID

    ID  shift, and go to state 95


State 56

    7 exp: ID LPAREN RPAREN .

    $default  reduce using rule 7 (exp)


State 57

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp
   37 nonemptyactuals: exp .
   38                | exp . COMMA nonemptyactuals

    COMMA   shift, and go to state 96
    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 37 (nonemptyactuals)


State 58

    6 exp: ID LPAREN actuals . RPAREN

    RPAREN  shift, and go to state 97


State 59

   36 actuals: nonemptyactuals .

    $default  reduce using rule 36 (actuals)


State 60

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp
   32    | ID LBRACK exp . RBRACK OF exp

    RBRACK  shift, and go to state 98
    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50


State 61

   61 rec_one: ID . EQ exp

    EQ  shift, and go to state 99


State 62

   20 exp: ID LBRACE RBRACE .

    $default  reduce using rule 20 (exp)


State 63

   19 exp: ID LBRACE rec . RBRACE

    RBRACE  shift, and go to state 100


State 64

   58 rec: rec_nonempty .

    $default  reduce using rule 58 (rec)


State 65

   59 rec_nonempty: rec_one .
   60             | rec_one . COMMA rec_nonempty

    COMMA  shift, and go to state 101

    $default  reduce using rule 59 (rec_nonempty)


State 66

   39 sequencing: exp SEMICOLON . sequencing_exps

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp              go to state 102
    sequencing_exps  go to state 103
    lvalue           go to state 14
    oneormore        go to state 15
    one              go to state 16


State 67

   33 exp: LPAREN exp RPAREN .

    $default  reduce using rule 33 (exp)


State 68

   22 exp: LPAREN sequencing RPAREN .

    $default  reduce using rule 22 (exp)


State 69

   24 exp: IF exp THEN . exp
   25    | IF exp THEN . exp ELSE exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 104
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 70

   28 exp: WHILE exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 105
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 71

   29 exp: FOR ID ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 106
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 72

   74 fundec_one: FUNCTION ID . LPAREN tyfields RPAREN EQ exp
   75           | FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp
   76           | FUNCTION ID . LPAREN RPAREN EQ exp
   77           | FUNCTION ID . LPAREN RPAREN COLON ID EQ exp

    LPAREN  shift, and go to state 107


State 73

   55 vardec: VAR ID . ASSIGN exp
   56       | VAR ID . COLON ID ASSIGN exp

    COLON   shift, and go to state 108
    ASSIGN  shift, and go to state 109


State 74

   64 tydec_one: TYPE ID . EQ ty

    EQ  shift, and go to state 110


State 75

   31 exp: LET decs IN . expseq END

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp         go to state 111
    expseq      go to state 112
    sequencing  go to state 113
    lvalue      go to state 14
    oneormore   go to state 15
    one         go to state 16


State 76

   51 decs_nonempty: decs_nonempty_s decs .

    $default  reduce using rule 51 (decs_nonempty)


State 77

   63 tydec: tydec_one tydec .

    $default  reduce using rule 63 (tydec)


State 78

   73 fundec: fundec_one fundec .

    $default  reduce using rule 73 (fundec)


State 79

    9 exp: exp . PLUS exp
    9    | exp PLUS exp .
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp

    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42

    $default  reduce using rule 9 (exp)


State 80

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   10    | exp MINUS exp .
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp

    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42

    $default  reduce using rule 10 (exp)


State 81

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   11    | exp TIMES exp .
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp

    $default  reduce using rule 11 (exp)


State 82

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   12    | exp DIVIDE exp .
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp

    $default  reduce using rule 12 (exp)


State 83

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   13    | exp EQ exp .
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 13 (exp)


State 84

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   14    | exp NEQ exp .
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 14 (exp)


State 85

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   15    | exp LT exp .
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 15 (exp)


State 86

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   16    | exp LE exp .
   17    | exp . GT exp
   18    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 16 (exp)


State 87

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   17    | exp GT exp .
   18    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 17 (exp)


State 88

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   18    | exp GE exp .
   26    | exp . AND exp
   27    | exp . OR exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 18 (exp)


State 89

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   26    | exp . AND exp
   26    | exp AND exp .
   27    | exp . OR exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48

    $default  reduce using rule 26 (exp)


State 90

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp
   27    | exp OR exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48

    $default  reduce using rule 27 (exp)


State 91

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp
   48 one: lvalue LBRACK exp . RBRACK

    RBRACK  shift, and go to state 114
    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50


State 92

   47 one: lvalue DOT ID .

    $default  reduce using rule 47 (one)


State 93

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   23    | lvalue ASSIGN exp .
   26    | exp . AND exp
   27    | exp . OR exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 23 (exp)


State 94

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp
   45 oneormore: oneormore LBRACK exp . RBRACK

    RBRACK  shift, and go to state 115
    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50


State 95

   44 oneormore: oneormore DOT ID .

    $default  reduce using rule 44 (oneormore)


State 96

   38 nonemptyactuals: exp COMMA . nonemptyactuals

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp              go to state 57
    nonemptyactuals  go to state 116
    lvalue           go to state 14
    oneormore        go to state 15
    one              go to state 16


State 97

    6 exp: ID LPAREN actuals RPAREN .

    $default  reduce using rule 6 (exp)


State 98

   32 exp: ID LBRACK exp RBRACK . OF exp

    OF  shift, and go to state 117


State 99

   61 rec_one: ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 118
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 100

   19 exp: ID LBRACE rec RBRACE .

    $default  reduce using rule 19 (exp)


State 101

   60 rec_nonempty: rec_one COMMA . rec_nonempty

    ID  shift, and go to state 61

    rec_nonempty  go to state 119
    rec_one       go to state 65


State 102

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp
   40 sequencing_exps: exp .
   41                | exp . SEMICOLON sequencing_exps

    SEMICOLON  shift, and go to state 120
    PLUS       shift, and go to state 39
    MINUS      shift, and go to state 40
    TIMES      shift, and go to state 41
    DIVIDE     shift, and go to state 42
    EQ         shift, and go to state 43
    NEQ        shift, and go to state 44
    LT         shift, and go to state 45
    LE         shift, and go to state 46
    GT         shift, and go to state 47
    GE         shift, and go to state 48
    AND        shift, and go to state 49
    OR         shift, and go to state 50

    $default  reduce using rule 40 (sequencing_exps)


State 103

   39 sequencing: exp SEMICOLON sequencing_exps .

    $default  reduce using rule 39 (sequencing)


State 104

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   24    | IF exp THEN exp .
   25    | IF exp THEN exp . ELSE exp
   26    | exp . AND exp
   27    | exp . OR exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50
    ELSE    shift, and go to state 121

    PLUS      [reduce using rule 24 (exp)]
    MINUS     [reduce using rule 24 (exp)]
    TIMES     [reduce using rule 24 (exp)]
    DIVIDE    [reduce using rule 24 (exp)]
    EQ        [reduce using rule 24 (exp)]
    NEQ       [reduce using rule 24 (exp)]
    LT        [reduce using rule 24 (exp)]
    LE        [reduce using rule 24 (exp)]
    GT        [reduce using rule 24 (exp)]
    GE        [reduce using rule 24 (exp)]
    AND       [reduce using rule 24 (exp)]
    OR        [reduce using rule 24 (exp)]
    ELSE      [reduce using rule 24 (exp)]
    $default  reduce using rule 24 (exp)


State 105

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp
   28    | WHILE exp DO exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    PLUS      [reduce using rule 28 (exp)]
    MINUS     [reduce using rule 28 (exp)]
    TIMES     [reduce using rule 28 (exp)]
    DIVIDE    [reduce using rule 28 (exp)]
    EQ        [reduce using rule 28 (exp)]
    NEQ       [reduce using rule 28 (exp)]
    LT        [reduce using rule 28 (exp)]
    LE        [reduce using rule 28 (exp)]
    GT        [reduce using rule 28 (exp)]
    GE        [reduce using rule 28 (exp)]
    AND       [reduce using rule 28 (exp)]
    OR        [reduce using rule 28 (exp)]
    $default  reduce using rule 28 (exp)


State 106

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp
   29    | FOR ID ASSIGN exp . TO exp DO exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50
    TO      shift, and go to state 122


State 107

   74 fundec_one: FUNCTION ID LPAREN . tyfields RPAREN EQ exp
   75           | FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp
   76           | FUNCTION ID LPAREN . RPAREN EQ exp
   77           | FUNCTION ID LPAREN . RPAREN COLON ID EQ exp

    ID      shift, and go to state 123
    RPAREN  shift, and go to state 124

    RPAREN  [reduce using rule 65 (tyfields)]

    tyfields           go to state 125
    tyfields_nonempty  go to state 126


State 108

   56 vardec: VAR ID COLON . ID ASSIGN exp

    ID  shift, and go to state 127


State 109

   55 vardec: VAR ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 128
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 110

   64 tydec_one: TYPE ID EQ . ty

    ID      shift, and go to state 129
    LBRACE  shift, and go to state 130
    ARRAY   shift, and go to state 131

    ty  go to state 132


State 111

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp
   39 sequencing: exp . SEMICOLON sequencing_exps

    SEMICOLON  shift, and go to state 66
    PLUS       shift, and go to state 39
    MINUS      shift, and go to state 40
    TIMES      shift, and go to state 41
    DIVIDE     shift, and go to state 42
    EQ         shift, and go to state 43
    NEQ        shift, and go to state 44
    LT         shift, and go to state 45
    LE         shift, and go to state 46
    GT         shift, and go to state 47
    GE         shift, and go to state 48
    AND        shift, and go to state 49
    OR         shift, and go to state 50


State 112

   31 exp: LET decs IN expseq . END

    END  shift, and go to state 133


State 113

   34 expseq: sequencing .

    $default  reduce using rule 34 (expseq)


State 114

   48 one: lvalue LBRACK exp RBRACK .

    $default  reduce using rule 48 (one)


State 115

   45 oneormore: oneormore LBRACK exp RBRACK .

    $default  reduce using rule 45 (oneormore)


State 116

   38 nonemptyactuals: exp COMMA nonemptyactuals .

    $default  reduce using rule 38 (nonemptyactuals)


State 117

   32 exp: ID LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 134
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 118

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp
   61 rec_one: ID EQ exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 61 (rec_one)


State 119

   60 rec_nonempty: rec_one COMMA rec_nonempty .

    $default  reduce using rule 60 (rec_nonempty)


State 120

   41 sequencing_exps: exp SEMICOLON . sequencing_exps

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp              go to state 102
    sequencing_exps  go to state 135
    lvalue           go to state 14
    oneormore        go to state 15
    one              go to state 16


State 121

   25 exp: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 136
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 122

   29 exp: FOR ID ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 137
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 123

   67 tyfields_nonempty: ID . COLON ID
   68                  | ID . COLON ID COMMA tyfields_nonempty

    COLON  shift, and go to state 138


State 124

   76 fundec_one: FUNCTION ID LPAREN RPAREN . EQ exp
   77           | FUNCTION ID LPAREN RPAREN . COLON ID EQ exp

    COLON  shift, and go to state 139
    EQ     shift, and go to state 140


State 125

   74 fundec_one: FUNCTION ID LPAREN tyfields . RPAREN EQ exp
   75           | FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp

    RPAREN  shift, and go to state 141


State 126

   66 tyfields: tyfields_nonempty .

    $default  reduce using rule 66 (tyfields)


State 127

   56 vardec: VAR ID COLON ID . ASSIGN exp

    ASSIGN  shift, and go to state 142


State 128

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp
   55 vardec: VAR ID ASSIGN exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 55 (vardec)


State 129

   69 ty: ID .

    $default  reduce using rule 69 (ty)


State 130

   70 ty: LBRACE . tyfields RBRACE

    ID  shift, and go to state 123

    $default  reduce using rule 65 (tyfields)

    tyfields           go to state 143
    tyfields_nonempty  go to state 126


State 131

   71 ty: ARRAY . OF ID

    OF  shift, and go to state 144


State 132

   64 tydec_one: TYPE ID EQ ty .

    $default  reduce using rule 64 (tydec_one)


State 133

   31 exp: LET decs IN expseq END .

    $default  reduce using rule 31 (exp)


State 134

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp
   32    | ID LBRACK exp RBRACK OF exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    PLUS      [reduce using rule 32 (exp)]
    MINUS     [reduce using rule 32 (exp)]
    TIMES     [reduce using rule 32 (exp)]
    DIVIDE    [reduce using rule 32 (exp)]
    EQ        [reduce using rule 32 (exp)]
    NEQ       [reduce using rule 32 (exp)]
    LT        [reduce using rule 32 (exp)]
    LE        [reduce using rule 32 (exp)]
    GT        [reduce using rule 32 (exp)]
    GE        [reduce using rule 32 (exp)]
    AND       [reduce using rule 32 (exp)]
    OR        [reduce using rule 32 (exp)]
    $default  reduce using rule 32 (exp)


State 135

   41 sequencing_exps: exp SEMICOLON sequencing_exps .

    $default  reduce using rule 41 (sequencing_exps)


State 136

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   25    | IF exp THEN exp ELSE exp .
   26    | exp . AND exp
   27    | exp . OR exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    PLUS      [reduce using rule 25 (exp)]
    MINUS     [reduce using rule 25 (exp)]
    TIMES     [reduce using rule 25 (exp)]
    DIVIDE    [reduce using rule 25 (exp)]
    EQ        [reduce using rule 25 (exp)]
    NEQ       [reduce using rule 25 (exp)]
    LT        [reduce using rule 25 (exp)]
    LE        [reduce using rule 25 (exp)]
    GT        [reduce using rule 25 (exp)]
    GE        [reduce using rule 25 (exp)]
    AND       [reduce using rule 25 (exp)]
    OR        [reduce using rule 25 (exp)]
    $default  reduce using rule 25 (exp)


State 137

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp
   29    | FOR ID ASSIGN exp TO exp . DO exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50
    DO      shift, and go to state 145


State 138

   67 tyfields_nonempty: ID COLON . ID
   68                  | ID COLON . ID COMMA tyfields_nonempty

    ID  shift, and go to state 146


State 139

   77 fundec_one: FUNCTION ID LPAREN RPAREN COLON . ID EQ exp

    ID  shift, and go to state 147


State 140

   76 fundec_one: FUNCTION ID LPAREN RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 148
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 141

   74 fundec_one: FUNCTION ID LPAREN tyfields RPAREN . EQ exp
   75           | FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp

    COLON  shift, and go to state 149
    EQ     shift, and go to state 150


State 142

   56 vardec: VAR ID COLON ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 151
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 143

   70 ty: LBRACE tyfields . RBRACE

    RBRACE  shift, and go to state 152


State 144

   71 ty: ARRAY OF . ID

    ID  shift, and go to state 153


State 145

   29 exp: FOR ID ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 154
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 146

   67 tyfields_nonempty: ID COLON ID .
   68                  | ID COLON ID . COMMA tyfields_nonempty

    COMMA  shift, and go to state 155

    $default  reduce using rule 67 (tyfields_nonempty)


State 147

   77 fundec_one: FUNCTION ID LPAREN RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 156


State 148

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp
   76 fundec_one: FUNCTION ID LPAREN RPAREN EQ exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 76 (fundec_one)


State 149

   75 fundec_one: FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp

    ID  shift, and go to state 157


State 150

   74 fundec_one: FUNCTION ID LPAREN tyfields RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 158
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 151

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp
   56 vardec: VAR ID COLON ID ASSIGN exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 56 (vardec)


State 152

   70 ty: LBRACE tyfields RBRACE .

    $default  reduce using rule 70 (ty)


State 153

   71 ty: ARRAY OF ID .

    $default  reduce using rule 71 (ty)


State 154

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp
   29    | FOR ID ASSIGN exp TO exp DO exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    PLUS      [reduce using rule 29 (exp)]
    MINUS     [reduce using rule 29 (exp)]
    TIMES     [reduce using rule 29 (exp)]
    DIVIDE    [reduce using rule 29 (exp)]
    EQ        [reduce using rule 29 (exp)]
    NEQ       [reduce using rule 29 (exp)]
    LT        [reduce using rule 29 (exp)]
    LE        [reduce using rule 29 (exp)]
    GT        [reduce using rule 29 (exp)]
    GE        [reduce using rule 29 (exp)]
    AND       [reduce using rule 29 (exp)]
    OR        [reduce using rule 29 (exp)]
    $default  reduce using rule 29 (exp)


State 155

   68 tyfields_nonempty: ID COLON ID COMMA . tyfields_nonempty

    ID  shift, and go to state 123

    tyfields_nonempty  go to state 159


State 156

   77 fundec_one: FUNCTION ID LPAREN RPAREN COLON ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 160
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 157

   75 fundec_one: FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 161


State 158

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp
   74 fundec_one: FUNCTION ID LPAREN tyfields RPAREN EQ exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 74 (fundec_one)


State 159

   68 tyfields_nonempty: ID COLON ID COMMA tyfields_nonempty .

    $default  reduce using rule 68 (tyfields_nonempty)


State 160

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp
   77 fundec_one: FUNCTION ID LPAREN RPAREN COLON ID EQ exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 77 (fundec_one)


State 161

   75 fundec_one: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp        go to state 162
    lvalue     go to state 14
    oneormore  go to state 15
    one        go to state 16


State 162

    9 exp: exp . PLUS exp
   10    | exp . MINUS exp
   11    | exp . TIMES exp
   12    | exp . DIVIDE exp
   13    | exp . EQ exp
   14    | exp . NEQ exp
   15    | exp . LT exp
   16    | exp . LE exp
   17    | exp . GT exp
   18    | exp . GE exp
   26    | exp . AND exp
   27    | exp . OR exp
   75 fundec_one: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 75 (fundec_one)
