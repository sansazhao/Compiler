Nonterminals useless in grammar

   vardec
   actuals
   decs
   decs_nonempty
   decs_nonempty_s
   expseq
   fundec
   fundec_one
   lvalue
   nonemptyactuals
   one
   oneormore
   rec
   rec_nonempty
   rec_one
   sequencing
   sequencing_exps
   ty
   tydec
   tydec_one
   tyfields
   tyfields_nonempty


Terminals unused in grammar

   ID
   STRING
   INT
   COMMA
   COLON
   SEMICOLON
   LPAREN
   RPAREN
   LBRACK
   RBRACK
   LBRACE
   RBRACE
   DOT
   PLUS
   MINUS
   TIMES
   DIVIDE
   EQ
   NEQ
   LT
   LE
   GT
   GE
   AND
   OR
   ASSIGN
   ARRAY
   IF
   THEN
   ELSE
   WHILE
   FOR
   TO
   DO
   LET
   IN
   END
   OF
   BREAK
   NIL
   FUNCTION
   VAR
   TYPE


Rules useless in grammar

    3 vardec: VAR ID ASSIGN exp
    4       | VAR ID COLON ID ASSIGN exp


Grammar

    0 $accept: program $end

    1 program: exp

    2 exp: %empty


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258)
STRING (259)
INT (260)
COMMA (261)
COLON (262)
SEMICOLON (263)
LPAREN (264)
RPAREN (265)
LBRACK (266)
RBRACK (267)
LBRACE (268)
RBRACE (269)
DOT (270)
PLUS (271)
MINUS (272)
TIMES (273)
DIVIDE (274)
EQ (275)
NEQ (276)
LT (277)
LE (278)
GT (279)
GE (280)
AND (281)
OR (282)
ASSIGN (283)
ARRAY (284)
IF (285)
THEN (286)
ELSE (287)
WHILE (288)
FOR (289)
TO (290)
DO (291)
LET (292)
IN (293)
END (294)
OF (295)
BREAK (296)
NIL (297)
FUNCTION (298)
VAR (299)
TYPE (300)


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
program (47)
    on left: 1, on right: 0
exp (48)
    on left: 2, on right: 1


State 0

    0 $accept: . program $end

    $default  reduce using rule 2 (exp)

    program  go to state 1
    exp      go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: exp .

    $default  reduce using rule 1 (program)


State 3

    0 $accept: program $end .

    $default  accept
