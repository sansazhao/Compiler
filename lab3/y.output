State 1 conflicts: 1 shift/reduce
State 33 conflicts: 1 shift/reduce
State 35 conflicts: 1 shift/reduce
State 96 conflicts: 13 shift/reduce
State 97 conflicts: 12 shift/reduce
State 123 conflicts: 12 shift/reduce
State 125 conflicts: 12 shift/reduce
State 139 conflicts: 12 shift/reduce


Grammar

    0 $accept: program $end

    1 program: exp

    2 exp: lvalue
    3    | NIL
    4    | INT
    5    | STRING
    6    | LPAREN RPAREN
    7    | LPAREN sequencing RPAREN
    8    | LPAREN exp RPAREN
    9    | ID LPAREN actuals RPAREN
   10    | ID LPAREN RPAREN
   11    | ID LBRACE rec RBRACE
   12    | ID LBRACK exp RBRACK OF exp
   13    | lvalue ASSIGN exp
   14    | MINUS exp
   15    | exp PLUS exp
   16    | exp MINUS exp
   17    | exp TIMES exp
   18    | exp DIVIDE exp
   19    | exp EQ exp
   20    | exp NEQ exp
   21    | exp LT exp
   22    | exp LE exp
   23    | exp GT exp
   24    | exp GE exp
   25    | exp AND exp
   26    | exp OR exp
   27    | IF exp THEN exp ELSE exp
   28    | IF exp THEN exp
   29    | WHILE exp DO exp
   30    | FOR ID ASSIGN exp TO exp DO exp
   31    | BREAK
   32    | LET decs IN expseq END

   33 lvalue: ID
   34       | lvalue DOT ID
   35       | lvalue LBRACK exp RBRACK
   36       | ID LBRACK exp RBRACK

   37 expseq: %empty
   38       | sequencing_exps

   39 sequencing_exps: exp
   40                | exp SEMICOLON sequencing_exps

   41 sequencing: exp SEMICOLON sequencing_exps

   42 actuals: exp
   43        | exp COMMA actuals

   44 decs: %empty
   45     | decs_nonempty

   46 decs_nonempty: dec decs

   47 dec: vardec
   48    | tydec
   49    | fundec

   50 vardec: VAR ID ASSIGN exp
   51       | VAR ID COLON ID ASSIGN exp

   52 tydec: tydec_one
   53      | tydec_one tydec

   54 tydec_one: TYPE ID EQ ty

   55 ty: ID
   56   | LBRACE tyfields RBRACE
   57   | ARRAY OF ID

   58 tyfields: %empty
   59         | tyfields_nonempty

   60 tyfields_nonempty: ID COLON ID
   61                  | ID COLON ID COMMA tyfields_nonempty

   62 fundec: fundec_one
   63       | fundec_one fundec

   64 fundec_one: FUNCTION ID LPAREN tyfields RPAREN EQ exp
   65           | FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp

   66 rec: %empty
   67    | rec_nonempty

   68 rec_nonempty: rec_one
   69             | rec_one COMMA rec_nonempty

   70 rec_one: ID EQ exp


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 9 10 11 12 30 33 34 36 50 51 54 55 57 60 61 64 65 70
STRING (259) 5
INT (260) 4
COMMA (261) 43 61 69
COLON (262) 51 60 61 65
SEMICOLON (263) 40 41
LPAREN (264) 6 7 8 9 10 64 65
RPAREN (265) 6 7 8 9 10 64 65
LBRACK (266) 12 35 36
RBRACK (267) 12 35 36
LBRACE (268) 11 56
RBRACE (269) 11 56
DOT (270) 34
PLUS (271) 15
MINUS (272) 14 16
TIMES (273) 17
DIVIDE (274) 18
EQ (275) 19 54 64 65 70
NEQ (276) 20
LT (277) 21
LE (278) 22
GT (279) 23
GE (280) 24
AND (281) 25
OR (282) 26
ASSIGN (283) 13 30 50 51
ARRAY (284) 57
IF (285) 27 28
THEN (286) 27 28
ELSE (287) 27
WHILE (288) 29
FOR (289) 30
TO (290) 30
DO (291) 29 30
LET (292) 32
IN (293) 32
END (294) 32
OF (295) 12 57
BREAK (296) 31
NIL (297) 3
FUNCTION (298) 64 65
VAR (299) 50 51
TYPE (300) 54
UMINUS (301)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1, on right: 0
exp (49)
    on left: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
    23 24 25 26 27 28 29 30 31 32, on right: 1 8 12 13 14 15 16 17
    18 19 20 21 22 23 24 25 26 27 28 29 30 35 36 39 40 41 42 43 50
    51 64 65 70
lvalue (50)
    on left: 33 34 35 36, on right: 2 13 34 35
expseq (51)
    on left: 37 38, on right: 32
sequencing_exps (52)
    on left: 39 40, on right: 38 40 41
sequencing (53)
    on left: 41, on right: 7
actuals (54)
    on left: 42 43, on right: 9 43
decs (55)
    on left: 44 45, on right: 32 46
decs_nonempty (56)
    on left: 46, on right: 45
dec (57)
    on left: 47 48 49, on right: 46
vardec (58)
    on left: 50 51, on right: 47
tydec (59)
    on left: 52 53, on right: 48 53
tydec_one (60)
    on left: 54, on right: 52 53
ty (61)
    on left: 55 56 57, on right: 54
tyfields (62)
    on left: 58 59, on right: 56 64 65
tyfields_nonempty (63)
    on left: 60 61, on right: 59 61
fundec (64)
    on left: 62 63, on right: 49 63
fundec_one (65)
    on left: 64 65, on right: 62 63
rec (66)
    on left: 66 67, on right: 11
rec_nonempty (67)
    on left: 68 69, on right: 67 69
rec_one (68)
    on left: 70, on right: 68 69


State 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    program  go to state 12
    exp      go to state 13
    lvalue   go to state 14


State 1

    9 exp: ID . LPAREN actuals RPAREN
   10    | ID . LPAREN RPAREN
   11    | ID . LBRACE rec RBRACE
   12    | ID . LBRACK exp RBRACK OF exp
   33 lvalue: ID .
   36       | ID . LBRACK exp RBRACK

    LPAREN  shift, and go to state 15
    LBRACK  shift, and go to state 16
    LBRACE  shift, and go to state 17

    LBRACK    [reduce using rule 33 (lvalue)]
    $default  reduce using rule 33 (lvalue)


State 2

    5 exp: STRING .

    $default  reduce using rule 5 (exp)


State 3

    4 exp: INT .

    $default  reduce using rule 4 (exp)


State 4

    6 exp: LPAREN . RPAREN
    7    | LPAREN . sequencing RPAREN
    8    | LPAREN . exp RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    RPAREN  shift, and go to state 18
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp         go to state 19
    lvalue      go to state 14
    sequencing  go to state 20


State 5

   14 exp: MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 21
    lvalue  go to state 14


State 6

   27 exp: IF . exp THEN exp ELSE exp
   28    | IF . exp THEN exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 22
    lvalue  go to state 14


State 7

   29 exp: WHILE . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 23
    lvalue  go to state 14


State 8

   30 exp: FOR . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 24


State 9

   32 exp: LET . decs IN expseq END

    FUNCTION  shift, and go to state 25
    VAR       shift, and go to state 26
    TYPE      shift, and go to state 27

    $default  reduce using rule 44 (decs)

    decs           go to state 28
    decs_nonempty  go to state 29
    dec            go to state 30
    vardec         go to state 31
    tydec          go to state 32
    tydec_one      go to state 33
    fundec         go to state 34
    fundec_one     go to state 35


State 10

   31 exp: BREAK .

    $default  reduce using rule 31 (exp)


State 11

    3 exp: NIL .

    $default  reduce using rule 3 (exp)


State 12

    0 $accept: program . $end

    $end  shift, and go to state 36


State 13

    1 program: exp .
   15 exp: exp . PLUS exp
   16    | exp . MINUS exp
   17    | exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . EQ exp
   20    | exp . NEQ exp
   21    | exp . LT exp
   22    | exp . LE exp
   23    | exp . GT exp
   24    | exp . GE exp
   25    | exp . AND exp
   26    | exp . OR exp

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48

    $default  reduce using rule 1 (program)


State 14

    2 exp: lvalue .
   13    | lvalue . ASSIGN exp
   34 lvalue: lvalue . DOT ID
   35       | lvalue . LBRACK exp RBRACK

    LBRACK  shift, and go to state 49
    DOT     shift, and go to state 50
    ASSIGN  shift, and go to state 51

    $default  reduce using rule 2 (exp)


State 15

    9 exp: ID LPAREN . actuals RPAREN
   10    | ID LPAREN . RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    RPAREN  shift, and go to state 52
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 53
    lvalue   go to state 14
    actuals  go to state 54


State 16

   12 exp: ID LBRACK . exp RBRACK OF exp
   36 lvalue: ID LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 55
    lvalue  go to state 14


State 17

   11 exp: ID LBRACE . rec RBRACE

    ID  shift, and go to state 56

    $default  reduce using rule 66 (rec)

    rec           go to state 57
    rec_nonempty  go to state 58
    rec_one       go to state 59


State 18

    6 exp: LPAREN RPAREN .

    $default  reduce using rule 6 (exp)


State 19

    8 exp: LPAREN exp . RPAREN
   15    | exp . PLUS exp
   16    | exp . MINUS exp
   17    | exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . EQ exp
   20    | exp . NEQ exp
   21    | exp . LT exp
   22    | exp . LE exp
   23    | exp . GT exp
   24    | exp . GE exp
   25    | exp . AND exp
   26    | exp . OR exp
   41 sequencing: exp . SEMICOLON sequencing_exps

    SEMICOLON  shift, and go to state 60
    RPAREN     shift, and go to state 61
    PLUS       shift, and go to state 37
    MINUS      shift, and go to state 38
    TIMES      shift, and go to state 39
    DIVIDE     shift, and go to state 40
    EQ         shift, and go to state 41
    NEQ        shift, and go to state 42
    LT         shift, and go to state 43
    LE         shift, and go to state 44
    GT         shift, and go to state 45
    GE         shift, and go to state 46
    AND        shift, and go to state 47
    OR         shift, and go to state 48


State 20

    7 exp: LPAREN sequencing . RPAREN

    RPAREN  shift, and go to state 62


State 21

   14 exp: MINUS exp .
   15    | exp . PLUS exp
   16    | exp . MINUS exp
   17    | exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . EQ exp
   20    | exp . NEQ exp
   21    | exp . LT exp
   22    | exp . LE exp
   23    | exp . GT exp
   24    | exp . GE exp
   25    | exp . AND exp
   26    | exp . OR exp

    $default  reduce using rule 14 (exp)


State 22

   15 exp: exp . PLUS exp
   16    | exp . MINUS exp
   17    | exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . EQ exp
   20    | exp . NEQ exp
   21    | exp . LT exp
   22    | exp . LE exp
   23    | exp . GT exp
   24    | exp . GE exp
   25    | exp . AND exp
   26    | exp . OR exp
   27    | IF exp . THEN exp ELSE exp
   28    | IF exp . THEN exp

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48
    THEN    shift, and go to state 63


State 23

   15 exp: exp . PLUS exp
   16    | exp . MINUS exp
   17    | exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . EQ exp
   20    | exp . NEQ exp
   21    | exp . LT exp
   22    | exp . LE exp
   23    | exp . GT exp
   24    | exp . GE exp
   25    | exp . AND exp
   26    | exp . OR exp
   29    | WHILE exp . DO exp

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48
    DO      shift, and go to state 64


State 24

   30 exp: FOR ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 65


State 25

   64 fundec_one: FUNCTION . ID LPAREN tyfields RPAREN EQ exp
   65           | FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 66


State 26

   50 vardec: VAR . ID ASSIGN exp
   51       | VAR . ID COLON ID ASSIGN exp

    ID  shift, and go to state 67


State 27

   54 tydec_one: TYPE . ID EQ ty

    ID  shift, and go to state 68


State 28

   32 exp: LET decs . IN expseq END

    IN  shift, and go to state 69


State 29

   45 decs: decs_nonempty .

    $default  reduce using rule 45 (decs)


State 30

   46 decs_nonempty: dec . decs

    FUNCTION  shift, and go to state 25
    VAR       shift, and go to state 26
    TYPE      shift, and go to state 27

    $default  reduce using rule 44 (decs)

    decs           go to state 70
    decs_nonempty  go to state 29
    dec            go to state 30
    vardec         go to state 31
    tydec          go to state 32
    tydec_one      go to state 33
    fundec         go to state 34
    fundec_one     go to state 35


State 31

   47 dec: vardec .

    $default  reduce using rule 47 (dec)


State 32

   48 dec: tydec .

    $default  reduce using rule 48 (dec)


State 33

   52 tydec: tydec_one .
   53      | tydec_one . tydec

    TYPE  shift, and go to state 27

    TYPE      [reduce using rule 52 (tydec)]
    $default  reduce using rule 52 (tydec)

    tydec      go to state 71
    tydec_one  go to state 33


State 34

   49 dec: fundec .

    $default  reduce using rule 49 (dec)


State 35

   62 fundec: fundec_one .
   63       | fundec_one . fundec

    FUNCTION  shift, and go to state 25

    FUNCTION  [reduce using rule 62 (fundec)]
    $default  reduce using rule 62 (fundec)

    fundec      go to state 72
    fundec_one  go to state 35


State 36

    0 $accept: program $end .

    $default  accept


State 37

   15 exp: exp PLUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 73
    lvalue  go to state 14


State 38

   16 exp: exp MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 74
    lvalue  go to state 14


State 39

   17 exp: exp TIMES . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 75
    lvalue  go to state 14


State 40

   18 exp: exp DIVIDE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 76
    lvalue  go to state 14


State 41

   19 exp: exp EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 77
    lvalue  go to state 14


State 42

   20 exp: exp NEQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 78
    lvalue  go to state 14


State 43

   21 exp: exp LT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 79
    lvalue  go to state 14


State 44

   22 exp: exp LE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 80
    lvalue  go to state 14


State 45

   23 exp: exp GT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 81
    lvalue  go to state 14


State 46

   24 exp: exp GE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 82
    lvalue  go to state 14


State 47

   25 exp: exp AND . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 83
    lvalue  go to state 14


State 48

   26 exp: exp OR . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 84
    lvalue  go to state 14


State 49

   35 lvalue: lvalue LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 85
    lvalue  go to state 14


State 50

   34 lvalue: lvalue DOT . ID

    ID  shift, and go to state 86


State 51

   13 exp: lvalue ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 87
    lvalue  go to state 14


State 52

   10 exp: ID LPAREN RPAREN .

    $default  reduce using rule 10 (exp)


State 53

   15 exp: exp . PLUS exp
   16    | exp . MINUS exp
   17    | exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . EQ exp
   20    | exp . NEQ exp
   21    | exp . LT exp
   22    | exp . LE exp
   23    | exp . GT exp
   24    | exp . GE exp
   25    | exp . AND exp
   26    | exp . OR exp
   42 actuals: exp .
   43        | exp . COMMA actuals

    COMMA   shift, and go to state 88
    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48

    $default  reduce using rule 42 (actuals)


State 54

    9 exp: ID LPAREN actuals . RPAREN

    RPAREN  shift, and go to state 89


State 55

   12 exp: ID LBRACK exp . RBRACK OF exp
   15    | exp . PLUS exp
   16    | exp . MINUS exp
   17    | exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . EQ exp
   20    | exp . NEQ exp
   21    | exp . LT exp
   22    | exp . LE exp
   23    | exp . GT exp
   24    | exp . GE exp
   25    | exp . AND exp
   26    | exp . OR exp
   36 lvalue: ID LBRACK exp . RBRACK

    RBRACK  shift, and go to state 90
    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48


State 56

   70 rec_one: ID . EQ exp

    EQ  shift, and go to state 91


State 57

   11 exp: ID LBRACE rec . RBRACE

    RBRACE  shift, and go to state 92


State 58

   67 rec: rec_nonempty .

    $default  reduce using rule 67 (rec)


State 59

   68 rec_nonempty: rec_one .
   69             | rec_one . COMMA rec_nonempty

    COMMA  shift, and go to state 93

    $default  reduce using rule 68 (rec_nonempty)


State 60

   41 sequencing: exp SEMICOLON . sequencing_exps

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp              go to state 94
    lvalue           go to state 14
    sequencing_exps  go to state 95


State 61

    8 exp: LPAREN exp RPAREN .

    $default  reduce using rule 8 (exp)


State 62

    7 exp: LPAREN sequencing RPAREN .

    $default  reduce using rule 7 (exp)


State 63

   27 exp: IF exp THEN . exp ELSE exp
   28    | IF exp THEN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 96
    lvalue  go to state 14


State 64

   29 exp: WHILE exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 97
    lvalue  go to state 14


State 65

   30 exp: FOR ID ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 98
    lvalue  go to state 14


State 66

   64 fundec_one: FUNCTION ID . LPAREN tyfields RPAREN EQ exp
   65           | FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp

    LPAREN  shift, and go to state 99


State 67

   50 vardec: VAR ID . ASSIGN exp
   51       | VAR ID . COLON ID ASSIGN exp

    COLON   shift, and go to state 100
    ASSIGN  shift, and go to state 101


State 68

   54 tydec_one: TYPE ID . EQ ty

    EQ  shift, and go to state 102


State 69

   32 exp: LET decs IN . expseq END

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 37 (expseq)

    exp              go to state 94
    lvalue           go to state 14
    expseq           go to state 103
    sequencing_exps  go to state 104


State 70

   46 decs_nonempty: dec decs .

    $default  reduce using rule 46 (decs_nonempty)


State 71

   53 tydec: tydec_one tydec .

    $default  reduce using rule 53 (tydec)


State 72

   63 fundec: fundec_one fundec .

    $default  reduce using rule 63 (fundec)


State 73

   15 exp: exp . PLUS exp
   15    | exp PLUS exp .
   16    | exp . MINUS exp
   17    | exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . EQ exp
   20    | exp . NEQ exp
   21    | exp . LT exp
   22    | exp . LE exp
   23    | exp . GT exp
   24    | exp . GE exp
   25    | exp . AND exp
   26    | exp . OR exp

    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40

    $default  reduce using rule 15 (exp)


State 74

   15 exp: exp . PLUS exp
   16    | exp . MINUS exp
   16    | exp MINUS exp .
   17    | exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . EQ exp
   20    | exp . NEQ exp
   21    | exp . LT exp
   22    | exp . LE exp
   23    | exp . GT exp
   24    | exp . GE exp
   25    | exp . AND exp
   26    | exp . OR exp

    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40

    $default  reduce using rule 16 (exp)


State 75

   15 exp: exp . PLUS exp
   16    | exp . MINUS exp
   17    | exp . TIMES exp
   17    | exp TIMES exp .
   18    | exp . DIVIDE exp
   19    | exp . EQ exp
   20    | exp . NEQ exp
   21    | exp . LT exp
   22    | exp . LE exp
   23    | exp . GT exp
   24    | exp . GE exp
   25    | exp . AND exp
   26    | exp . OR exp

    $default  reduce using rule 17 (exp)


State 76

   15 exp: exp . PLUS exp
   16    | exp . MINUS exp
   17    | exp . TIMES exp
   18    | exp . DIVIDE exp
   18    | exp DIVIDE exp .
   19    | exp . EQ exp
   20    | exp . NEQ exp
   21    | exp . LT exp
   22    | exp . LE exp
   23    | exp . GT exp
   24    | exp . GE exp
   25    | exp . AND exp
   26    | exp . OR exp

    $default  reduce using rule 18 (exp)


State 77

   15 exp: exp . PLUS exp
   16    | exp . MINUS exp
   17    | exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . EQ exp
   19    | exp EQ exp .
   20    | exp . NEQ exp
   21    | exp . LT exp
   22    | exp . LE exp
   23    | exp . GT exp
   24    | exp . GE exp
   25    | exp . AND exp
   26    | exp . OR exp

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 19 (exp)


State 78

   15 exp: exp . PLUS exp
   16    | exp . MINUS exp
   17    | exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . EQ exp
   20    | exp . NEQ exp
   20    | exp NEQ exp .
   21    | exp . LT exp
   22    | exp . LE exp
   23    | exp . GT exp
   24    | exp . GE exp
   25    | exp . AND exp
   26    | exp . OR exp

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 20 (exp)


State 79

   15 exp: exp . PLUS exp
   16    | exp . MINUS exp
   17    | exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . EQ exp
   20    | exp . NEQ exp
   21    | exp . LT exp
   21    | exp LT exp .
   22    | exp . LE exp
   23    | exp . GT exp
   24    | exp . GE exp
   25    | exp . AND exp
   26    | exp . OR exp

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 21 (exp)


State 80

   15 exp: exp . PLUS exp
   16    | exp . MINUS exp
   17    | exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . EQ exp
   20    | exp . NEQ exp
   21    | exp . LT exp
   22    | exp . LE exp
   22    | exp LE exp .
   23    | exp . GT exp
   24    | exp . GE exp
   25    | exp . AND exp
   26    | exp . OR exp

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 22 (exp)


State 81

   15 exp: exp . PLUS exp
   16    | exp . MINUS exp
   17    | exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . EQ exp
   20    | exp . NEQ exp
   21    | exp . LT exp
   22    | exp . LE exp
   23    | exp . GT exp
   23    | exp GT exp .
   24    | exp . GE exp
   25    | exp . AND exp
   26    | exp . OR exp

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 23 (exp)


State 82

   15 exp: exp . PLUS exp
   16    | exp . MINUS exp
   17    | exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . EQ exp
   20    | exp . NEQ exp
   21    | exp . LT exp
   22    | exp . LE exp
   23    | exp . GT exp
   24    | exp . GE exp
   24    | exp GE exp .
   25    | exp . AND exp
   26    | exp . OR exp

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 24 (exp)


State 83

   15 exp: exp . PLUS exp
   16    | exp . MINUS exp
   17    | exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . EQ exp
   20    | exp . NEQ exp
   21    | exp . LT exp
   22    | exp . LE exp
   23    | exp . GT exp
   24    | exp . GE exp
   25    | exp . AND exp
   25    | exp AND exp .
   26    | exp . OR exp

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46

    $default  reduce using rule 25 (exp)


State 84

   15 exp: exp . PLUS exp
   16    | exp . MINUS exp
   17    | exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . EQ exp
   20    | exp . NEQ exp
   21    | exp . LT exp
   22    | exp . LE exp
   23    | exp . GT exp
   24    | exp . GE exp
   25    | exp . AND exp
   26    | exp . OR exp
   26    | exp OR exp .

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47

    $default  reduce using rule 26 (exp)


State 85

   15 exp: exp . PLUS exp
   16    | exp . MINUS exp
   17    | exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . EQ exp
   20    | exp . NEQ exp
   21    | exp . LT exp
   22    | exp . LE exp
   23    | exp . GT exp
   24    | exp . GE exp
   25    | exp . AND exp
   26    | exp . OR exp
   35 lvalue: lvalue LBRACK exp . RBRACK

    RBRACK  shift, and go to state 105
    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48


State 86

   34 lvalue: lvalue DOT ID .

    $default  reduce using rule 34 (lvalue)


State 87

   13 exp: lvalue ASSIGN exp .
   15    | exp . PLUS exp
   16    | exp . MINUS exp
   17    | exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . EQ exp
   20    | exp . NEQ exp
   21    | exp . LT exp
   22    | exp . LE exp
   23    | exp . GT exp
   24    | exp . GE exp
   25    | exp . AND exp
   26    | exp . OR exp

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48

    $default  reduce using rule 13 (exp)


State 88

   43 actuals: exp COMMA . actuals

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 53
    lvalue   go to state 14
    actuals  go to state 106


State 89

    9 exp: ID LPAREN actuals RPAREN .

    $default  reduce using rule 9 (exp)


State 90

   12 exp: ID LBRACK exp RBRACK . OF exp
   36 lvalue: ID LBRACK exp RBRACK .

    OF  shift, and go to state 107

    $default  reduce using rule 36 (lvalue)


State 91

   70 rec_one: ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 108
    lvalue  go to state 14


State 92

   11 exp: ID LBRACE rec RBRACE .

    $default  reduce using rule 11 (exp)


State 93

   69 rec_nonempty: rec_one COMMA . rec_nonempty

    ID  shift, and go to state 56

    rec_nonempty  go to state 109
    rec_one       go to state 59


State 94

   15 exp: exp . PLUS exp
   16    | exp . MINUS exp
   17    | exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . EQ exp
   20    | exp . NEQ exp
   21    | exp . LT exp
   22    | exp . LE exp
   23    | exp . GT exp
   24    | exp . GE exp
   25    | exp . AND exp
   26    | exp . OR exp
   39 sequencing_exps: exp .
   40                | exp . SEMICOLON sequencing_exps

    SEMICOLON  shift, and go to state 110
    PLUS       shift, and go to state 37
    MINUS      shift, and go to state 38
    TIMES      shift, and go to state 39
    DIVIDE     shift, and go to state 40
    EQ         shift, and go to state 41
    NEQ        shift, and go to state 42
    LT         shift, and go to state 43
    LE         shift, and go to state 44
    GT         shift, and go to state 45
    GE         shift, and go to state 46
    AND        shift, and go to state 47
    OR         shift, and go to state 48

    $default  reduce using rule 39 (sequencing_exps)


State 95

   41 sequencing: exp SEMICOLON sequencing_exps .

    $default  reduce using rule 41 (sequencing)


State 96

   15 exp: exp . PLUS exp
   16    | exp . MINUS exp
   17    | exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . EQ exp
   20    | exp . NEQ exp
   21    | exp . LT exp
   22    | exp . LE exp
   23    | exp . GT exp
   24    | exp . GE exp
   25    | exp . AND exp
   26    | exp . OR exp
   27    | IF exp THEN exp . ELSE exp
   28    | IF exp THEN exp .

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48
    ELSE    shift, and go to state 111

    PLUS      [reduce using rule 28 (exp)]
    MINUS     [reduce using rule 28 (exp)]
    TIMES     [reduce using rule 28 (exp)]
    DIVIDE    [reduce using rule 28 (exp)]
    EQ        [reduce using rule 28 (exp)]
    NEQ       [reduce using rule 28 (exp)]
    LT        [reduce using rule 28 (exp)]
    LE        [reduce using rule 28 (exp)]
    GT        [reduce using rule 28 (exp)]
    GE        [reduce using rule 28 (exp)]
    AND       [reduce using rule 28 (exp)]
    OR        [reduce using rule 28 (exp)]
    ELSE      [reduce using rule 28 (exp)]
    $default  reduce using rule 28 (exp)


State 97

   15 exp: exp . PLUS exp
   16    | exp . MINUS exp
   17    | exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . EQ exp
   20    | exp . NEQ exp
   21    | exp . LT exp
   22    | exp . LE exp
   23    | exp . GT exp
   24    | exp . GE exp
   25    | exp . AND exp
   26    | exp . OR exp
   29    | WHILE exp DO exp .

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48

    PLUS      [reduce using rule 29 (exp)]
    MINUS     [reduce using rule 29 (exp)]
    TIMES     [reduce using rule 29 (exp)]
    DIVIDE    [reduce using rule 29 (exp)]
    EQ        [reduce using rule 29 (exp)]
    NEQ       [reduce using rule 29 (exp)]
    LT        [reduce using rule 29 (exp)]
    LE        [reduce using rule 29 (exp)]
    GT        [reduce using rule 29 (exp)]
    GE        [reduce using rule 29 (exp)]
    AND       [reduce using rule 29 (exp)]
    OR        [reduce using rule 29 (exp)]
    $default  reduce using rule 29 (exp)


State 98

   15 exp: exp . PLUS exp
   16    | exp . MINUS exp
   17    | exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . EQ exp
   20    | exp . NEQ exp
   21    | exp . LT exp
   22    | exp . LE exp
   23    | exp . GT exp
   24    | exp . GE exp
   25    | exp . AND exp
   26    | exp . OR exp
   30    | FOR ID ASSIGN exp . TO exp DO exp

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48
    TO      shift, and go to state 112


State 99

   64 fundec_one: FUNCTION ID LPAREN . tyfields RPAREN EQ exp
   65           | FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 113

    $default  reduce using rule 58 (tyfields)

    tyfields           go to state 114
    tyfields_nonempty  go to state 115


State 100

   51 vardec: VAR ID COLON . ID ASSIGN exp

    ID  shift, and go to state 116


State 101

   50 vardec: VAR ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 117
    lvalue  go to state 14


State 102

   54 tydec_one: TYPE ID EQ . ty

    ID      shift, and go to state 118
    LBRACE  shift, and go to state 119
    ARRAY   shift, and go to state 120

    ty  go to state 121


State 103

   32 exp: LET decs IN expseq . END

    END  shift, and go to state 122


State 104

   38 expseq: sequencing_exps .

    $default  reduce using rule 38 (expseq)


State 105

   35 lvalue: lvalue LBRACK exp RBRACK .

    $default  reduce using rule 35 (lvalue)


State 106

   43 actuals: exp COMMA actuals .

    $default  reduce using rule 43 (actuals)


State 107

   12 exp: ID LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 123
    lvalue  go to state 14


State 108

   15 exp: exp . PLUS exp
   16    | exp . MINUS exp
   17    | exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . EQ exp
   20    | exp . NEQ exp
   21    | exp . LT exp
   22    | exp . LE exp
   23    | exp . GT exp
   24    | exp . GE exp
   25    | exp . AND exp
   26    | exp . OR exp
   70 rec_one: ID EQ exp .

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48

    $default  reduce using rule 70 (rec_one)


State 109

   69 rec_nonempty: rec_one COMMA rec_nonempty .

    $default  reduce using rule 69 (rec_nonempty)


State 110

   40 sequencing_exps: exp SEMICOLON . sequencing_exps

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp              go to state 94
    lvalue           go to state 14
    sequencing_exps  go to state 124


State 111

   27 exp: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 125
    lvalue  go to state 14


State 112

   30 exp: FOR ID ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 126
    lvalue  go to state 14


State 113

   60 tyfields_nonempty: ID . COLON ID
   61                  | ID . COLON ID COMMA tyfields_nonempty

    COLON  shift, and go to state 127


State 114

   64 fundec_one: FUNCTION ID LPAREN tyfields . RPAREN EQ exp
   65           | FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp

    RPAREN  shift, and go to state 128


State 115

   59 tyfields: tyfields_nonempty .

    $default  reduce using rule 59 (tyfields)


State 116

   51 vardec: VAR ID COLON ID . ASSIGN exp

    ASSIGN  shift, and go to state 129


State 117

   15 exp: exp . PLUS exp
   16    | exp . MINUS exp
   17    | exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . EQ exp
   20    | exp . NEQ exp
   21    | exp . LT exp
   22    | exp . LE exp
   23    | exp . GT exp
   24    | exp . GE exp
   25    | exp . AND exp
   26    | exp . OR exp
   50 vardec: VAR ID ASSIGN exp .

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48

    $default  reduce using rule 50 (vardec)


State 118

   55 ty: ID .

    $default  reduce using rule 55 (ty)


State 119

   56 ty: LBRACE . tyfields RBRACE

    ID  shift, and go to state 113

    $default  reduce using rule 58 (tyfields)

    tyfields           go to state 130
    tyfields_nonempty  go to state 115


State 120

   57 ty: ARRAY . OF ID

    OF  shift, and go to state 131


State 121

   54 tydec_one: TYPE ID EQ ty .

    $default  reduce using rule 54 (tydec_one)


State 122

   32 exp: LET decs IN expseq END .

    $default  reduce using rule 32 (exp)


State 123

   12 exp: ID LBRACK exp RBRACK OF exp .
   15    | exp . PLUS exp
   16    | exp . MINUS exp
   17    | exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . EQ exp
   20    | exp . NEQ exp
   21    | exp . LT exp
   22    | exp . LE exp
   23    | exp . GT exp
   24    | exp . GE exp
   25    | exp . AND exp
   26    | exp . OR exp

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48

    PLUS      [reduce using rule 12 (exp)]
    MINUS     [reduce using rule 12 (exp)]
    TIMES     [reduce using rule 12 (exp)]
    DIVIDE    [reduce using rule 12 (exp)]
    EQ        [reduce using rule 12 (exp)]
    NEQ       [reduce using rule 12 (exp)]
    LT        [reduce using rule 12 (exp)]
    LE        [reduce using rule 12 (exp)]
    GT        [reduce using rule 12 (exp)]
    GE        [reduce using rule 12 (exp)]
    AND       [reduce using rule 12 (exp)]
    OR        [reduce using rule 12 (exp)]
    $default  reduce using rule 12 (exp)


State 124

   40 sequencing_exps: exp SEMICOLON sequencing_exps .

    $default  reduce using rule 40 (sequencing_exps)


State 125

   15 exp: exp . PLUS exp
   16    | exp . MINUS exp
   17    | exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . EQ exp
   20    | exp . NEQ exp
   21    | exp . LT exp
   22    | exp . LE exp
   23    | exp . GT exp
   24    | exp . GE exp
   25    | exp . AND exp
   26    | exp . OR exp
   27    | IF exp THEN exp ELSE exp .

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48

    PLUS      [reduce using rule 27 (exp)]
    MINUS     [reduce using rule 27 (exp)]
    TIMES     [reduce using rule 27 (exp)]
    DIVIDE    [reduce using rule 27 (exp)]
    EQ        [reduce using rule 27 (exp)]
    NEQ       [reduce using rule 27 (exp)]
    LT        [reduce using rule 27 (exp)]
    LE        [reduce using rule 27 (exp)]
    GT        [reduce using rule 27 (exp)]
    GE        [reduce using rule 27 (exp)]
    AND       [reduce using rule 27 (exp)]
    OR        [reduce using rule 27 (exp)]
    $default  reduce using rule 27 (exp)


State 126

   15 exp: exp . PLUS exp
   16    | exp . MINUS exp
   17    | exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . EQ exp
   20    | exp . NEQ exp
   21    | exp . LT exp
   22    | exp . LE exp
   23    | exp . GT exp
   24    | exp . GE exp
   25    | exp . AND exp
   26    | exp . OR exp
   30    | FOR ID ASSIGN exp TO exp . DO exp

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48
    DO      shift, and go to state 132


State 127

   60 tyfields_nonempty: ID COLON . ID
   61                  | ID COLON . ID COMMA tyfields_nonempty

    ID  shift, and go to state 133


State 128

   64 fundec_one: FUNCTION ID LPAREN tyfields RPAREN . EQ exp
   65           | FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp

    COLON  shift, and go to state 134
    EQ     shift, and go to state 135


State 129

   51 vardec: VAR ID COLON ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 136
    lvalue  go to state 14


State 130

   56 ty: LBRACE tyfields . RBRACE

    RBRACE  shift, and go to state 137


State 131

   57 ty: ARRAY OF . ID

    ID  shift, and go to state 138


State 132

   30 exp: FOR ID ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 139
    lvalue  go to state 14


State 133

   60 tyfields_nonempty: ID COLON ID .
   61                  | ID COLON ID . COMMA tyfields_nonempty

    COMMA  shift, and go to state 140

    $default  reduce using rule 60 (tyfields_nonempty)


State 134

   65 fundec_one: FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp

    ID  shift, and go to state 141


State 135

   64 fundec_one: FUNCTION ID LPAREN tyfields RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 142
    lvalue  go to state 14


State 136

   15 exp: exp . PLUS exp
   16    | exp . MINUS exp
   17    | exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . EQ exp
   20    | exp . NEQ exp
   21    | exp . LT exp
   22    | exp . LE exp
   23    | exp . GT exp
   24    | exp . GE exp
   25    | exp . AND exp
   26    | exp . OR exp
   51 vardec: VAR ID COLON ID ASSIGN exp .

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48

    $default  reduce using rule 51 (vardec)


State 137

   56 ty: LBRACE tyfields RBRACE .

    $default  reduce using rule 56 (ty)


State 138

   57 ty: ARRAY OF ID .

    $default  reduce using rule 57 (ty)


State 139

   15 exp: exp . PLUS exp
   16    | exp . MINUS exp
   17    | exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . EQ exp
   20    | exp . NEQ exp
   21    | exp . LT exp
   22    | exp . LE exp
   23    | exp . GT exp
   24    | exp . GE exp
   25    | exp . AND exp
   26    | exp . OR exp
   30    | FOR ID ASSIGN exp TO exp DO exp .

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48

    PLUS      [reduce using rule 30 (exp)]
    MINUS     [reduce using rule 30 (exp)]
    TIMES     [reduce using rule 30 (exp)]
    DIVIDE    [reduce using rule 30 (exp)]
    EQ        [reduce using rule 30 (exp)]
    NEQ       [reduce using rule 30 (exp)]
    LT        [reduce using rule 30 (exp)]
    LE        [reduce using rule 30 (exp)]
    GT        [reduce using rule 30 (exp)]
    GE        [reduce using rule 30 (exp)]
    AND       [reduce using rule 30 (exp)]
    OR        [reduce using rule 30 (exp)]
    $default  reduce using rule 30 (exp)


State 140

   61 tyfields_nonempty: ID COLON ID COMMA . tyfields_nonempty

    ID  shift, and go to state 113

    tyfields_nonempty  go to state 143


State 141

   65 fundec_one: FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 144


State 142

   15 exp: exp . PLUS exp
   16    | exp . MINUS exp
   17    | exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . EQ exp
   20    | exp . NEQ exp
   21    | exp . LT exp
   22    | exp . LE exp
   23    | exp . GT exp
   24    | exp . GE exp
   25    | exp . AND exp
   26    | exp . OR exp
   64 fundec_one: FUNCTION ID LPAREN tyfields RPAREN EQ exp .

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48

    $default  reduce using rule 64 (fundec_one)


State 143

   61 tyfields_nonempty: ID COLON ID COMMA tyfields_nonempty .

    $default  reduce using rule 61 (tyfields_nonempty)


State 144

   65 fundec_one: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp     go to state 145
    lvalue  go to state 14


State 145

   15 exp: exp . PLUS exp
   16    | exp . MINUS exp
   17    | exp . TIMES exp
   18    | exp . DIVIDE exp
   19    | exp . EQ exp
   20    | exp . NEQ exp
   21    | exp . LT exp
   22    | exp . LE exp
   23    | exp . GT exp
   24    | exp . GE exp
   25    | exp . AND exp
   26    | exp . OR exp
   65 fundec_one: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .

    PLUS    shift, and go to state 37
    MINUS   shift, and go to state 38
    TIMES   shift, and go to state 39
    DIVIDE  shift, and go to state 40
    EQ      shift, and go to state 41
    NEQ     shift, and go to state 42
    LT      shift, and go to state 43
    LE      shift, and go to state 44
    GT      shift, and go to state 45
    GE      shift, and go to state 46
    AND     shift, and go to state 47
    OR      shift, and go to state 48

    $default  reduce using rule 65 (fundec_one)
